//#uobject test/threaded
//#no-fast

var w = []|;
UVar.new(Global, "x")|;
var gx = "Global.x"|;
Global.&x.notifyChange(closure() { w << Global.x})|;

Threaded.init|;
var id = Threaded.startThread|;
Threaded.queueOp(id, Threaded.DIE, [])|;
sleep(200ms);
Threaded.queueOp(id, Threaded.WRITE_VAR, [gx, 1])|;
Threaded.queueOp(id, Threaded.WRITE_VAR, [gx, 2])|;
Threaded.queueOp(id, Threaded.WRITE_VAR, [gx, 3])|;
sleep(100ms);
w;
[000000001] []
Threaded.lockFunctionDropDelayOp(id, 200000),
Threaded.lockFunctionDropDelayOp(id, 200000),
sleep(100ms);
// Check that dropped calls return
Threaded.lockFunctionDropDelayOp(id, 0)| 12.print,
sleep(500ms);
[000000002] 12
w;
[000000002] [1]
Threaded.lockFunctionDropDelayOp(id, 0),
sleep(200ms);
w;
[00000003] [1, 2]

