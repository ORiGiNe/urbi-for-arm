# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# This makefile does several things:
# - call SWIG to parse C++ headers files, and generate Java (.java)
#   sources files, and C++ sources files (this C++ code does the
#   binding between Java code and Urbi SDK)
# - compile the C++ generated code, plus some code I provide in the
#   src folder in order to create the library liburbijava.so
# - then compile the Java code (all the .java) generated plus the java
#   code of the examples and the java code of the tests. This is done
#   by giving all java sources to tobuild_JAVA variable (and automake
#   <<makes the coffee>>...)
# - finally it takes all the java objects (.class files) and create
#   several jars files (one main jar for the liburbijava, and several
#   for example code and test code)

# Since the rules depends from the result of each other, this makefile
# is quite hackish:
# - compilation of java code depends on generation of java sources by
#   swig
# - creation of jar files depends on compilation of java sources
#   (since jars aggregate java objects)

# Initialize some common variables so that we can always use +=.  Do
# not initialize TESTS, otherwise Automake sees empty test suites
# everywhere.





VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(dist_bin_SCRIPTS) $(dist_java_DATA) \
	$(dist_noinst_DATA) $(dist_noinst_SCRIPTS) $(include_HEADERS) \
	$(nobase_dist_java_DATA) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/build-aux/make/init.mk \
	$(top_srcdir)/build-aux/make/libport.mk
bin_PROGRAMS =
@APPLE_TRUE@am__append_1 = -DAPPLE
# link with the generated jvm link file
@WIN32_TRUE@am__append_2 = $(JAVA_LDFLAGS) $(JAVA_LIBS)
subdir = sdk-remote/src/swig/java
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/tests/m4/urbi-tests.m4 \
	$(top_srcdir)/build-aux/m4/acx_pthread.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_classpath.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_java_home.m4 \
	$(top_srcdir)/build-aux/m4/ax_java_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_pkg_swig.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_jar.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_java.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_java_works.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_javac.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_javac_works.m4 \
	$(top_srcdir)/build-aux/m4/boost.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/m4/m4-after.m4 \
	$(top_srcdir)/build-aux/m4/package-version.m4 \
	$(top_srcdir)/build-aux/m4/pthread-sources.m4 \
	$(top_srcdir)/build-aux/m4/require-progs.m4 \
	$(top_srcdir)/build-aux/m4/tc-prog.m4 \
	$(top_srcdir)/build-aux/m4/urbi-append-flags.m4 \
	$(top_srcdir)/build-aux/m4/urbi-apple.m4 \
	$(top_srcdir)/build-aux/m4/urbi-arg-progs.m4 \
	$(top_srcdir)/build-aux/m4/urbi-arg.m4 \
	$(top_srcdir)/build-aux/m4/urbi-boost.m4 \
	$(top_srcdir)/build-aux/m4/urbi-build-aux.m4 \
	$(top_srcdir)/build-aux/m4/urbi-canonical-host.m4 \
	$(top_srcdir)/build-aux/m4/urbi-compilation-mode.m4 \
	$(top_srcdir)/build-aux/m4/urbi-config-scripts.m4 \
	$(top_srcdir)/build-aux/m4/urbi-dirs.m4 \
	$(top_srcdir)/build-aux/m4/urbi-distcheck-configure-flags.m4 \
	$(top_srcdir)/build-aux/m4/urbi-doc.m4 \
	$(top_srcdir)/build-aux/m4/urbi-enable-doc-sections.m4 \
	$(top_srcdir)/build-aux/m4/urbi-float-check.m4 \
	$(top_srcdir)/build-aux/m4/urbi-isystem.m4 \
	$(top_srcdir)/build-aux/m4/urbi-lib-suffix.m4 \
	$(top_srcdir)/build-aux/m4/urbi-libport.m4 \
	$(top_srcdir)/build-aux/m4/urbi-libtool.m4 \
	$(top_srcdir)/build-aux/m4/urbi-module-checks.m4 \
	$(top_srcdir)/build-aux/m4/urbi-module.m4 \
	$(top_srcdir)/build-aux/m4/urbi-package-info.m4 \
	$(top_srcdir)/build-aux/m4/urbi-package-kind.m4 \
	$(top_srcdir)/build-aux/m4/urbi-pkg-config.m4 \
	$(top_srcdir)/build-aux/m4/urbi-pragma.m4 \
	$(top_srcdir)/build-aux/m4/urbi-prog-cxx.m4 \
	$(top_srcdir)/build-aux/m4/urbi-prog-latex.m4 \
	$(top_srcdir)/build-aux/m4/urbi-pthread.m4 \
	$(top_srcdir)/build-aux/m4/urbi-resolve-dir.m4 \
	$(top_srcdir)/build-aux/m4/urbi-shlibext.m4 \
	$(top_srcdir)/build-aux/m4/urbi-sockets.m4 \
	$(top_srcdir)/build-aux/m4/urbi-ufloat.m4 \
	$(top_srcdir)/build-aux/m4/urbi-win32.m4 \
	$(top_srcdir)/build-aux/m4/warning.m4 \
	$(top_srcdir)/build-aux/m4/xenomai.m4 \
	$(top_srcdir)/sdk-remote/src/swig/java/liburbijava.ac \
	$(top_srcdir)/modules/modules.ac \
	$(top_srcdir)/modules/algorithm/md5/module.ac.auto \
	$(top_srcdir)/modules/system/ros/module.ac.auto \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/kernel/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(tobuilddir)" "$(DESTDIR)$(javadir)" \
	"$(DESTDIR)$(javadir)" "$(DESTDIR)$(javadir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
@WIN32_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) \
@WIN32_TRUE@	$(am__DEPENDENCIES_1)
liburbijava@LIBSFX@_la_DEPENDENCIES =  \
	$(sdk_remote_builddir)/src/liburbi/liburbi$(LIBSFX).la \
	$(sdk_remote_builddir)/src/libuobject/libuobject$(LIBSFX).la \
	$(am__DEPENDENCIES_2)
am__dirstamp = $(am__leading_dot)dirstamp
am_liburbijava@LIBSFX@_la_OBJECTS =  \
	src/liburbijava@LIBSFX@_la-callbacks-caller.lo \
	src/liburbijava@LIBSFX@_la-converter.lo \
	src/liburbijava@LIBSFX@_la-urbi_UObject.lo \
	src/liburbijava@LIBSFX@_la-urbi_Log.lo
nodist_liburbijava@LIBSFX@_la_OBJECTS =  \
	liburbijava@LIBSFX@_la-java.lo
liburbijava@LIBSFX@_la_OBJECTS = $(am_liburbijava@LIBSFX@_la_OBJECTS) \
	$(nodist_liburbijava@LIBSFX@_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
liburbijava@LIBSFX@_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(liburbijava@LIBSFX@_la_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_noinst_SCRIPTS) \
	$(nodist_bin_SCRIPTS) $(nodist_noinst_SCRIPTS)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(liburbijava@LIBSFX@_la_SOURCES) \
	$(nodist_liburbijava@LIBSFX@_la_SOURCES)
DIST_SOURCES = $(liburbijava@LIBSFX@_la_SOURCES)
CLASSPATH_ENV = CLASSPATH=$(JAVAROOT):$(srcdir)/$(JAVAROOT):$$CLASSPATH
DATA = $(dist_java_DATA) $(dist_noinst_DATA) $(nobase_dist_java_DATA) \
	$(nobase_nodist_java_DATA) $(nodist_noinst_DATA) \
	$(noinst_DATA)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINDIR = @BINDIR@
BISON = @BISON@
BISON_VERSION = @BISON_VERSION@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LDFLAGS = @BOOST_DATE_TIME_LDFLAGS@
BOOST_DATE_TIME_LDPATH = @BOOST_DATE_TIME_LDPATH@
BOOST_DATE_TIME_LIBS = @BOOST_DATE_TIME_LIBS@
BOOST_HEADER_DIR = @BOOST_HEADER_DIR@
BOOST_LDPATH = @BOOST_LDPATH@
BOOST_LIBRARY_GLOB = @BOOST_LIBRARY_GLOB@
BOOST_REGEX_LDFLAGS = @BOOST_REGEX_LDFLAGS@
BOOST_REGEX_LDPATH = @BOOST_REGEX_LDPATH@
BOOST_REGEX_LIBS = @BOOST_REGEX_LIBS@
BOOST_ROOT = @BOOST_ROOT@
BOOST_SYSTEM_LDFLAGS = @BOOST_SYSTEM_LDFLAGS@
BOOST_SYSTEM_LDPATH = @BOOST_SYSTEM_LDPATH@
BOOST_SYSTEM_LIBS = @BOOST_SYSTEM_LIBS@
BOOST_THREAD_LDFLAGS = @BOOST_THREAD_LDFLAGS@
BOOST_THREAD_LDPATH = @BOOST_THREAD_LDPATH@
BOOST_THREAD_LIBS = @BOOST_THREAD_LIBS@
BOOST_VERSION = @BOOST_VERSION@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAGS_ARCH = @CFLAGS_ARCH@
COMPILATION_MODE_DEBUG = @COMPILATION_MODE_DEBUG@
COMPILATION_MODE_SPACE = @COMPILATION_MODE_SPACE@
COMPILATION_MODE_SPEED = @COMPILATION_MODE_SPEED@
CONVERT = @CONVERT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXFLAGS_ARCH = @CXXFLAGS_ARCH@
CXX_ARCH = @CXX_ARCH@
CXX_FLAVOR = @CXX_FLAVOR@
CXX_VERSION = @CXX_VERSION@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISABLED_MODULES = @DISABLED_MODULES@
DISABLED_MODULES_U = @DISABLED_MODULES_U@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DLLTOOL = @DLLTOOL@
DLMODEXT = @DLMODEXT@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ECLIPSE_UObjectJava_ARGS = @ECLIPSE_UObjectJava_ARGS@
ECLIPSE_UObjectJava_withmain_ARGS = @ECLIPSE_UObjectJava_withmain_ARGS@
ECLIPSE_URBIBallTrackingHead_ARGS = @ECLIPSE_URBIBallTrackingHead_ARGS@
ECLIPSE_URBIBandWidth_ARGS = @ECLIPSE_URBIBandWidth_ARGS@
ECLIPSE_URBIImage_ARGS = @ECLIPSE_URBIImage_ARGS@
ECLIPSE_URBIMirror_ARGS = @ECLIPSE_URBIMirror_ARGS@
ECLIPSE_URBIPing_ARGS = @ECLIPSE_URBIPing_ARGS@
ECLIPSE_URBIPlay_ARGS = @ECLIPSE_URBIPlay_ARGS@
ECLIPSE_URBIRecord_ARGS = @ECLIPSE_URBIRecord_ARGS@
ECLIPSE_URBISend_ARGS = @ECLIPSE_URBISend_ARGS@
ECLIPSE_URBISound_ARGS = @ECLIPSE_URBISound_ARGS@
ECLIPSE_URBITalkie_ARGS = @ECLIPSE_URBITalkie_ARGS@
ECLIPSE_test_ARGS = @ECLIPSE_test_ARGS@
EGREP = @EGREP@
EMACS = @EMACS@
EMACSLOADPATH = @EMACSLOADPATH@
ENABLED_MODULES = @ENABLED_MODULES@
ENABLED_MODULES_U = @ENABLED_MODULES_U@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FLEX = @FLEX@
FLEX_VERSION = @FLEX_VERSION@
GREP = @GREP@
HAVE_ORTP = @HAVE_ORTP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVACFLAGS = @JAVACFLAGS@
JAVAC_PATH_NAME = @JAVAC_PATH_NAME@
JAVAFLAGS = @JAVAFLAGS@
JAVAPREFIX = @JAVAPREFIX@
JAVA_CPPFLAGS = @JAVA_CPPFLAGS@
JAVA_HOME = @JAVA_HOME@
JAVA_LDFLAGS = @JAVA_LDFLAGS@
JAVA_LIBS = @JAVA_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBPORT_BUILDPREFIX = @LIBPORT_BUILDPREFIX@
LIBPORT_SRCDIR = @LIBPORT_SRCDIR@
LIBS = 
LIBSFX = @LIBSFX@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORTP_CFLAGS = @ORTP_CFLAGS@
ORTP_LIBS = @ORTP_LIBS@
ORTP_VERSION = @ORTP_VERSION@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BRAND = @PACKAGE_BRAND@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_COPYRIGHT = @PACKAGE_COPYRIGHT@
PACKAGE_COPYRIGHT_HOLDER = @PACKAGE_COPYRIGHT_HOLDER@
PACKAGE_COPYRIGHT_YEARS = @PACKAGE_COPYRIGHT_YEARS@
PACKAGE_KIND = @PACKAGE_KIND@
PACKAGE_MAJOR = @PACKAGE_MAJOR@
PACKAGE_MINOR = @PACKAGE_MINOR@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_PATCHLEVEL = @PACKAGE_PATCHLEVEL@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFCROP = @PDFCROP@
PDFLATEX = @PDFLATEX@
PKG_CONFIG = @PKG_CONFIG@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LDFLAGS = @PTHREAD_LDFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PTHREAD_SOURCES = @PTHREAD_SOURCES@
RANLIB = @RANLIB@
ROS_CPPFLAGS = @ROS_CPPFLAGS@
ROS_LDFLAGS = @ROS_LDFLAGS@
ROS_LIBS = @ROS_LIBS@
ROS_PREFIX = @ROS_PREFIX@
ROS_ROOT = @ROS_ROOT@
ROS_RPATH = @ROS_RPATH@
ROS_SETUP = @ROS_SETUP@
ROS_VERSION = @ROS_VERSION@
SDK_CFLAGS = @SDK_CFLAGS@
SDK_CXXFLAGS = @SDK_CXXFLAGS@
SDK_LDFLAGS = @SDK_LDFLAGS@
SDK_LIBS = @SDK_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHARED_LIBS_ENVVAR_NAME = @SHARED_LIBS_ENVVAR_NAME@
SHARED_LIBS_ENVVAR_VALUE = @SHARED_LIBS_ENVVAR_VALUE@
SHELL = @SHELL@
SHLIBEXT = @SHLIBEXT@
SOCKETS_LIBS = @SOCKETS_LIBS@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIG_VERSION = @SWIG_VERSION@
TC_COMPILER_FLAGS_NAME = @TC_COMPILER_FLAGS_NAME@
TEX4HT = @TEX4HT@
URBI_ENV = @URBI_ENV@
URBI_HOST = @URBI_HOST@
URBI_HOST_COMP = @URBI_HOST_COMP@
URBI_HOST_CPU = @URBI_HOST_CPU@
URBI_HOST_OS = @URBI_HOST_OS@
UUDECODE = @UUDECODE@
VERSION = @VERSION@
VISIBILITY_CXXFLAGS = @VISIBILITY_CXXFLAGS@
WARNING_CXXFLAGS = @WARNING_CXXFLAGS@
X11_CPPFLAGS = @X11_CPPFLAGS@
X11_LDADD = @X11_LDADD@
XENOMAI_PATH = @XENOMAI_PATH@
XENOMAI_POSIX_CPPFLAGS = @XENOMAI_POSIX_CPPFLAGS@
XENOMAI_POSIX_LDFLAGS = @XENOMAI_POSIX_LDFLAGS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_configure_args = @ac_configure_args@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_cv_distcheck_configure_flags = @ac_cv_distcheck_configure_flags@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
branddir = @branddir@
brandincludedir = @brandincludedir@
brandlibdir = @brandlibdir@
brandlibexecdir = @brandlibexecdir@
brandsharedir = @brandsharedir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_doc_sections = @enable_doc_sections@
enginedir = @enginedir@
envdir = @envdir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kbranddir = @kbranddir@
kernel_builddir = @kernel_builddir@
kernel_srcdir = @kernel_srcdir@
kerneldir = @kerneldir@
kernelincludedir = @kernelincludedir@
libdir = @libdir@
libdirname = @libdirname@
libexecdir = @libexecdir@
lispdir = @lispdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
modules_srcdir = @modules_srcdir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
remotedir = @remotedir@
sbindir = @sbindir@
sdk_remote_builddir = @sdk_remote_builddir@
sdk_remote_srcdir = @sdk_remote_srcdir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
test_uobjectsdir = @test_uobjectsdir@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
umaindir = @umaindir@
uobjectsdir = @uobjectsdir@
urbi_uobjectsdir = @urbi_uobjectsdir@
urbiincludedir = @urbiincludedir@

# Dependencies on "all".
ALLS = 
AM_CFLAGS = 
AM_CPPFLAGS = 
AM_CXXFLAGS = 
# We work on C++ only.
AM_DEFAULT_SOURCE_EXT = .cc
AM_LDFLAGS = 
# Require 1.11.1 asap.
# http://lists.gnu.org/archive/html/automake/2009-12/msg00012.html
# Use bzip2 only.
AUTOMAKE_OPTIONS = 1.11 no-dist-gzip dist-bzip2 -Wno-portability
BUILDCHECK_ENVIRONMENT = $(CHECK_ENVIRONMENT)
BUILT_SOURCES = java.cc java.cc.h
CHECK_CLEANFILES = 
CHECK_ENVIRONMENT = 

# Visual Studio Debugger PDB Files (C++).
# http://msdn2.microsoft.com/en-us/library/yd4f8bd1.aspx.
# Files created by MSVC++ and our cl.exe.

# Files which are not shipped should be cleaned.
CLEANFILES = $(BUILT_SOURCES) vc80.pdb $(PROGRAMS:=.auto.*) \
	$(EXTRA_PROGRAMS:=.auto.*) lt-*.obj $(nodist_check_SCRIPTS) \
	$(nodist_noinst_SCRIPTS) $(STAMPS) *.i *.ii *.i.c *.ii.cc \
	$(DEPDIR)/java.Pcc $(DEPDIR)/java.Tcc java.cc.tmp java.cc.h \
	java.cc $(java_src_outdir)/*.java $(ALL_OBJECTS) $(ALL_JARS)
CLEANDIRS = urbi
DISTCLEANFILES = 
EXTRA_DATA = 
EXTRA_DIST = $(build_aux_dir)/bin/ls-files swig/boost_unordered_map.i \
	swig/generated-comments.i swig/doc-from-header.pl swig/java.i \
	swig/udictionary-javacode.i
EXTRA_HEADERS = 
EXTRA_LTLIBRARIES = 
INSTALLCHECK_ENVIRONMENT = $(CHECK_ENVIRONMENT)
M4SHFLAGS = 
MAINTAINERCLEANFILES = 
MOSTLYCLEANFILES = 

# Sometimes it is really convenient to see the output of the
# preprocessor.  But it's a pain to run the command by hand.

# Sometimes, the remaining # lines are a nuisance: the error is not
# reported against the preprocessed file.  And then we also want to
# compile these files, that's why I used extensions that can be
# directly compiled (*.c and *.cc).
SUFFIXES = .i .ii .i.c .ii.cc
TESTS_ENVIRONMENT = 
TFAIL_TESTS = 
XFAIL_TESTS = 
dist_bin_SCRIPTS = 
dist_noinst_DATA = 
dist_noinst_SCRIPTS = 
include_HEADERS = 
lib_LTLIBRARIES = liburbijava@LIBSFX@.la
nodist_bin_SCRIPTS = 
nodist_check_DATA = 
nodist_check_SCRIPTS = 
nodist_noinst_DATA = 
nodist_noinst_SCRIPTS = 
noinst_LTLIBRARIES = 

# Because we use sysexists, which uses 77, we can't use the
# traditional 77 to mean SKIP tests.  Rather, use 176 consistently.
SKIP_STATUS = 176

# Automake still does not honor AM_LDADD.
LDADD = $(AM_LDADD)
build_aux_builddir = $(top_builddir)/build-aux
build_aux_dir = $(build_aux_srcdir)
build_aux_srcdir = $(top_srcdir)/build-aux
move_if_change = $(build_aux_dir)/bin/move-if-change
move_if_change_run = $(move_if_change) --color $(if $(V:0=),--verbose,--silent)

# CLEAN_LOCAL: instead of hooking clean-local, which is troublesome
# when there are AM_CONDITIONAL used, append the target to
# CLEAN_LOCAL.
CLEAN_LOCAL = clean-cleandirs
VERSIONIFY = $(top_srcdir)/build-aux/bin/versionify
VERSIONIFYFLAGS = 
VERSIONIFY_RUN = \
  $(VERSIONIFY)					\
  --directory					\
  --cache=$(VERSIONIFY_CACHE)			\
  --package="$(VERSIONIFY_PACKAGE)"


# See an example of use in sdk-remote/src/Makefile.am.
AT_V_PATCH = $(AT_V_PATCH_$(V))
AT_V_PATCH_ = $(AT_V_PATCH_$(AM_DEFAULT_VERBOSITY))
AT_V_PATCH_0 = @echo "  PATCH " $^;

# Running continuously the test suite is costly, especially for the
# buildfarm.  Some changes have no impact whatsoever on the kernel,
# uconsole etc, for instance changes in the documentation.  In that
# case we would like not to rerun the test suite.  But spelling out
# the exact dependencies (on the libraries, the binaries, the
# wrappers, but also the urbi/*.u files) is hard.  So we create stamp
# files that make it easier to depend on changes of some components.
STAMPS = 
noinst_DATA = $(STAMPS)

# ls_files_in_dir DIR GLOBBING-PATTERNS
# -------------------------------------
# The files in DIR that match the GLOBBING-PATTERNS.
#
# The GLOBBING-PATTERNS are put in single quotes to avoid being
# caught by the shell.
ls_files_in_dir = \
  $(or									   \
    $(shell $(build_aux_dir)/bin/ls-files -s $(1) $(patsubst %,'%',$(2))), \
    $(error ls-files in $(1) returned nothing for: $(2)))


# ls_files GLOBBING-PATTERNS
# --------------------------
# The files in $(srcdir) that match the GLOBBING-PATTERNS.
ls_files = \
  $(call ls_files_in_dir,$(srcdir),$(1))


# make_path REPLACEMENT-PATTERN, DIR...
# -------------------------------------
# Apply REPLACEMENT-PATTERN to each DIR, and join the result with colons.
# For instance:
# (call make_path,foo/%/bar,a b c)
#  => foo/a/bar:foo/b/bar:foo/c/bar
build_aux_empty := 
build_aux_space := $(build_aux_empty) $(build_aux_empty)
make_path = \
  $(subst $(build_aux_space),:,$(patsubst %,$(1),$(2)))

INSTALL_DATA_HOOKS = 
INSTALL_EXEC_HOOKS = 
UNINSTALL_HOOKS = 
LIBPORT_CPPFLAGS = -I$(LIBPORT_SRCDIR)/include -I$(LIBPORT_BUILDPREFIX)include -I$(LIBPORT_SRCDIR)/libltdl
LIBPORT_LIBS = $(LIBPORT_BUILDPREFIX)lib/libport/libport$(LIBSFX).la
LTDL_CPPFLAGS = -I$(LIBPORT_SRCDIR) -I$(LIBPORT_SRCDIR)/libltdl
LTDL_LIBS = $(LIBPORT_BUILDPREFIX)libltdl/libltdlc.la
SCHED_CPPFLAGS = $(LIBPORT_CPPFLAGS)
SCHED_LIBS = $(LIBPORT_BUILDPREFIX)lib/sched/libsched$(LIBSFX).la
@ENABLE_SERIALIZATION_TRUE@SERIALIZE_CPPFLAGS = $(LIBPORT_CPPFLAGS)
@ENABLE_SERIALIZATION_TRUE@SERIALIZE_LIBS = $(LIBPORT_BUILDPREFIX)lib/serialize/libserialize$(LIBSFX).la
TINYXML_CPPFLAGS = $(LIBPORT_CPPFLAGS)
TINYXML_LIBS = $(LIBPORT_BUILDPREFIX)lib/tinyxml/libtinyxml$(LIBSFX).la
java_src_outdir = urbi
java_package = urbi

# Pass CPPFLAGS to get things like -I/opt/local/include.  Don't use
# -Wall, which is -Wextra + "ignore warning disabling".
SWIGFLAGS = -c++ -java -Wextra -outdir $(java_src_outdir) -MD -MF \
	"$(DEPDIR)/$*.Tcc" $(subst -isystem ,-I,$(CPPFLAGS)) \
	$(LIBPORT_CPPFLAGS) -I$(sdk_remote_srcdir)/src/liburbi/uobject \
	-I$(sdk_remote_srcdir)/include -package $(java_package) \
	$(am__append_1)
nodist_liburbijava@LIBSFX@_la_SOURCES = \
  java.cc					\
  java.cc.h

liburbijava@LIBSFX@_la_SOURCES = \
  src/callbacks-caller.hh			\
  src/callbacks-caller.cc			\
  src/call-macros.hh				\
  src/converter.hh				\
  src/converter.cc				\
  src/urbi_UObject.h				\
  src/urbi_UObject.cc				\
  src/urbi_Log.cc				\
  src/urbi_Log.h

liburbijava@LIBSFX@_la_LIBADD =  \
	$(sdk_remote_builddir)/src/liburbi/liburbi$(LIBSFX).la \
	$(sdk_remote_builddir)/src/libuobject/libuobject$(LIBSFX).la \
	$(am__append_2)
liburbijava@LIBSFX@_la_CPPFLAGS = \
  $(JAVA_CPPFLAGS)				\
  $(BOOST_CPPFLAGS)				\
  $(LIBPORT_CPPFLAGS)				\
  -I$(sdk_remote_srcdir)/include		\
  -I$(sdk_remote_builddir)/include


#liburbijava@LIBSFX@_la_LDFLAGS = -Wl,--add-stdcall-alias
@WIN32_TRUE@liburbijava@LIBSFX@_la_LDFLAGS = -no-undefined

# Under windows path are set to C:/cygwin... in libdir, which
# then prevent us to install the .la in a place with a DESTDIR
# libtool complains that he want some path ending in "C:/cygwin..."
# So we remote the C:/cygwin
# On other Os we assume paths do not contains C:/cygwin
#dirty-fix:
#	perl -pi -e "s,libdir='C:/cygwin,libdir=',g" liburbijava@LIBSFX@.la

#install-exec-local: dirty-fix
javadir = $(datadir)/sdk-remote/java
JAVAROOT = .
liburbijava_SRC = gnu/bytecode/Access.java \
	gnu/bytecode/ArrayClassLoader.java gnu/bytecode/ArrayType.java \
	gnu/bytecode/AttrContainer.java gnu/bytecode/Attribute.java \
	gnu/bytecode/ClassFileInput.java gnu/bytecode/ClassType.java \
	gnu/bytecode/ClassTypeWriter.java gnu/bytecode/CodeAttr.java \
	gnu/bytecode/ConstantPool.java \
	gnu/bytecode/ConstantValueAttr.java \
	gnu/bytecode/CpoolClass.java gnu/bytecode/CpoolEntry.java \
	gnu/bytecode/CpoolNameAndType.java gnu/bytecode/CpoolRef.java \
	gnu/bytecode/CpoolString.java gnu/bytecode/CpoolUtf8.java \
	gnu/bytecode/CpoolValue1.java gnu/bytecode/CpoolValue2.java \
	gnu/bytecode/dump.java gnu/bytecode/ExceptionsAttr.java \
	gnu/bytecode/Field.java gnu/bytecode/Filter.java \
	gnu/bytecode/IfState.java gnu/bytecode/InnerClassesAttr.java \
	gnu/bytecode/Label.java gnu/bytecode/LineNumbersAttr.java \
	gnu/bytecode/ListCodeSize.java gnu/bytecode/LocalVarsAttr.java \
	gnu/bytecode/Location.java gnu/bytecode/Member.java \
	gnu/bytecode/Method.java gnu/bytecode/MiscAttr.java \
	gnu/bytecode/ObjectType.java gnu/bytecode/PrimType.java \
	gnu/bytecode/Scope.java gnu/bytecode/SourceDebugExtAttr.java \
	gnu/bytecode/SourceFileAttr.java gnu/bytecode/SwitchState.java \
	gnu/bytecode/TryState.java gnu/bytecode/Type.java \
	gnu/bytecode/VarEnumerator.java gnu/bytecode/Variable.java \
	gnu/bytecode/ZipArchive.java gnu/bytecode/ZipLoader.java \
	urbi/ImageComponent.java urbi/ImageFilter.java \
	urbi/ImageSampler.java urbi/ImageUtilities.java \
	urbi/MedianFilter.java urbi/SendSoundSampler.java \
	urbi/SoundAction.java urbi/SoundSampler.java \
	urbi/SoundUtilities.java urbi/UObjectStarter.java \
	urbi/UObject.java urbi/UMain.java urbi/Log.java $(wildcard \
	urbi/*.java)

# javac generate objects files (.class) that contains $ in their name,
# so escape them before constructing .jar file.
liburbijava_OBJECTS = \
  $(foreach file,$(wildcard gnu/bytecode/*.class),'$(file)')	\
  $(foreach file,$(wildcard urbi/*.class),'$(file)')

liburbijava_JAR = lib/liburbijava.jar
liburbijavadir = $(javadir)
JAR_RULES = uobjectjava uobjectjava_withmain test_all test_java \
	test_timer
uobjectjava_SRC = \
  examples/uobjectjava/Adder.java		\
  examples/uobjectjava/Feature1.java		\
  examples/uobjectjava/Feature2.java		\
  examples/uobjectjava/Feature3.java		\
  examples/uobjectjava/Feature4.java		\
  examples/uobjectjava/Feature5.java		\
  examples/uobjectjava/Colormap.java		\
  examples/uobjectjava/SimpleUObject.java

uobjectjava_JAR = examples/uobjectjava/UObjectJava.jar
uobjectjava_withmain_SRC = \
  examples/uobjectjava_withmain/Main.java		\
  examples/uobjectjava_withmain/SimpleUObject.java

uobjectjava_withmain_JAR = examples/uobjectjava_withmain/UObjectJava_withmain.jar
balltrack_SRC = \
  examples/urbiballtrackinghead/URBIBallTrackingHead.java	\
  examples/urbiballtrackinghead/CallImage.java

balltrack_JAR = examples/urbiballtrackinghead/URBIBallTrackingHead.jar
bandwidth_SRC = \
  examples/urbibandwidth/URBIBandWidth.java	\
  examples/urbibandwidth/BW.java

bandwidth_JAR = examples/urbibandwidth/URBIBandWidth.jar
ping_SRC = \
  examples/urbiping/URBIPing.java		\
  examples/urbiping/UPing.java

ping_JAR = examples/urbiping/URBIPing.jar
ping_OBJECTS = $(ping_SRC:.java=.class)
image_SRC = \
  examples/urbiimage/ShowImage.java		\
  examples/urbiimage/URBIImage.java

image_JAR = examples/urbiimage/URBIImage.jar
mirror_SRC = \
  examples/urbimirror/Command.java		\
  examples/urbimirror/URBIMirror.java

mirror_JAR = examples/urbimirror/URBIMirror.jar
play_SRC = examples/urbiplay/URBIPlay.java
play_JAR = examples/urbiplay/URBIPlay.jar
record_SRC = \
  examples/urbirecord/URBIRecord.java		\
  examples/urbirecord/Command.java

record_JAR = examples/urbirecord/URBIRecord.jar
send_SRC = examples/urbisend/URBISend.java
send_JAR = examples/urbisend/URBISend.jar
sound_SRC = \
  examples/urbisound/CallSound.java		\
  examples/urbisound/URBISound.java

sound_JAR = examples/urbisound/URBISound.jar
talkie_SRC = \
  examples/urbitalkie/MicroNotify1.java		\
  examples/urbitalkie/MicroNotify2.java		\
  examples/urbitalkie/URBITalkie.java

talkie_JAR = examples/urbitalkie/URBITalkie.jar
test_all_SRC = tests/all/All.java
test_all_JAR = tests/all/All.jar
test_java_SRC = tests/java/Java.java
test_java_JAR = tests/java/Java.jar
test_timer_SRC = tests/timer/Timer.java
test_timer_JAR = tests/timer/Timer.jar
ALL_SOURCES = $(liburbijava_SRC) $(foreach \
	name,$(JAR_RULES),$($(name)_SRC))
ALL_OBJECTS = $(ALL_SOURCES:.java=.class)
ALL_JARS = $(liburbijava_JAR) $(foreach \
	name,$(JAR_RULES),$($(name)_JAR))
tobuild_JAVA = $(ALL_SOURCES)
tobuilddir = $(javadir)

# Install liburbi java sources and examples sources
nobase_dist_java_DATA = $(ALL_SOURCES)
nobase_nodist_java_DATA = $(ALL_JARS)

# Install examples manifests
# nobase_dist_java_DATA +=
# 	examples/urbiballtrackinghead/manifest
# 	examples/urbibandwidth/manifest
# 	examples/urbiping/manifest
# 	examples/urbiimage/manifest
# 	examples/urbimirror/manifest
# 	examples/urbiplay/manifest
# 	examples/urbirecord/manifest
# 	examples/urbisend/manifest
# 	examples/urbisound/manifest
# 	examples/urbitalkie/manifest

# Install a sample `build.xml' (equivalent of Makefile for `ant') to
# allow the user to recompile liburbijava.jar from the java sources.
# Install also sample Eclipse project files
dist_java_DATA = \
  sample/.classpath				\
  sample/.project				\
  sample/uobject.classpath			\
  sample/uobject.project			\
  sample/uobjectjava.launch			\
  sample/uobjectjava_withmain.launch

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .i .ii .i.c .ii.cc .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build-aux/make/init.mk $(top_srcdir)/build-aux/make/libport.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign sdk-remote/src/swig/java/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign sdk-remote/src/swig/java/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/liburbijava@LIBSFX@_la-callbacks-caller.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/liburbijava@LIBSFX@_la-converter.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/liburbijava@LIBSFX@_la-urbi_UObject.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/liburbijava@LIBSFX@_la-urbi_Log.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
liburbijava@LIBSFX@.la: $(liburbijava@LIBSFX@_la_OBJECTS) $(liburbijava@LIBSFX@_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(liburbijava@LIBSFX@_la_LINK) -rpath $(libdir) $(liburbijava@LIBSFX@_la_OBJECTS) $(liburbijava@LIBSFX@_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files
install-nodist_binSCRIPTS: $(nodist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-nodist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/liburbijava@LIBSFX@_la-callbacks-caller.$(OBJEXT)
	-rm -f src/liburbijava@LIBSFX@_la-callbacks-caller.lo
	-rm -f src/liburbijava@LIBSFX@_la-converter.$(OBJEXT)
	-rm -f src/liburbijava@LIBSFX@_la-converter.lo
	-rm -f src/liburbijava@LIBSFX@_la-urbi_Log.$(OBJEXT)
	-rm -f src/liburbijava@LIBSFX@_la-urbi_Log.lo
	-rm -f src/liburbijava@LIBSFX@_la-urbi_UObject.$(OBJEXT)
	-rm -f src/liburbijava@LIBSFX@_la-urbi_UObject.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/liburbijava@LIBSFX@_la-java.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/liburbijava@LIBSFX@_la-callbacks-caller.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/liburbijava@LIBSFX@_la-converter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/liburbijava@LIBSFX@_la-urbi_Log.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/liburbijava@LIBSFX@_la-urbi_UObject.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

src/liburbijava@LIBSFX@_la-callbacks-caller.lo: src/callbacks-caller.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/liburbijava@LIBSFX@_la-callbacks-caller.lo -MD -MP -MF src/$(DEPDIR)/liburbijava@LIBSFX@_la-callbacks-caller.Tpo -c -o src/liburbijava@LIBSFX@_la-callbacks-caller.lo `test -f 'src/callbacks-caller.cc' || echo '$(srcdir)/'`src/callbacks-caller.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/liburbijava@LIBSFX@_la-callbacks-caller.Tpo src/$(DEPDIR)/liburbijava@LIBSFX@_la-callbacks-caller.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/callbacks-caller.cc' object='src/liburbijava@LIBSFX@_la-callbacks-caller.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/liburbijava@LIBSFX@_la-callbacks-caller.lo `test -f 'src/callbacks-caller.cc' || echo '$(srcdir)/'`src/callbacks-caller.cc

src/liburbijava@LIBSFX@_la-converter.lo: src/converter.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/liburbijava@LIBSFX@_la-converter.lo -MD -MP -MF src/$(DEPDIR)/liburbijava@LIBSFX@_la-converter.Tpo -c -o src/liburbijava@LIBSFX@_la-converter.lo `test -f 'src/converter.cc' || echo '$(srcdir)/'`src/converter.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/liburbijava@LIBSFX@_la-converter.Tpo src/$(DEPDIR)/liburbijava@LIBSFX@_la-converter.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/converter.cc' object='src/liburbijava@LIBSFX@_la-converter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/liburbijava@LIBSFX@_la-converter.lo `test -f 'src/converter.cc' || echo '$(srcdir)/'`src/converter.cc

src/liburbijava@LIBSFX@_la-urbi_UObject.lo: src/urbi_UObject.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/liburbijava@LIBSFX@_la-urbi_UObject.lo -MD -MP -MF src/$(DEPDIR)/liburbijava@LIBSFX@_la-urbi_UObject.Tpo -c -o src/liburbijava@LIBSFX@_la-urbi_UObject.lo `test -f 'src/urbi_UObject.cc' || echo '$(srcdir)/'`src/urbi_UObject.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/liburbijava@LIBSFX@_la-urbi_UObject.Tpo src/$(DEPDIR)/liburbijava@LIBSFX@_la-urbi_UObject.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/urbi_UObject.cc' object='src/liburbijava@LIBSFX@_la-urbi_UObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/liburbijava@LIBSFX@_la-urbi_UObject.lo `test -f 'src/urbi_UObject.cc' || echo '$(srcdir)/'`src/urbi_UObject.cc

src/liburbijava@LIBSFX@_la-urbi_Log.lo: src/urbi_Log.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/liburbijava@LIBSFX@_la-urbi_Log.lo -MD -MP -MF src/$(DEPDIR)/liburbijava@LIBSFX@_la-urbi_Log.Tpo -c -o src/liburbijava@LIBSFX@_la-urbi_Log.lo `test -f 'src/urbi_Log.cc' || echo '$(srcdir)/'`src/urbi_Log.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/liburbijava@LIBSFX@_la-urbi_Log.Tpo src/$(DEPDIR)/liburbijava@LIBSFX@_la-urbi_Log.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/urbi_Log.cc' object='src/liburbijava@LIBSFX@_la-urbi_Log.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/liburbijava@LIBSFX@_la-urbi_Log.lo `test -f 'src/urbi_Log.cc' || echo '$(srcdir)/'`src/urbi_Log.cc

liburbijava@LIBSFX@_la-java.lo: java.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT liburbijava@LIBSFX@_la-java.lo -MD -MP -MF $(DEPDIR)/liburbijava@LIBSFX@_la-java.Tpo -c -o liburbijava@LIBSFX@_la-java.lo `test -f 'java.cc' || echo '$(srcdir)/'`java.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/liburbijava@LIBSFX@_la-java.Tpo $(DEPDIR)/liburbijava@LIBSFX@_la-java.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='java.cc' object='liburbijava@LIBSFX@_la-java.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liburbijava@LIBSFX@_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o liburbijava@LIBSFX@_la-java.lo `test -f 'java.cc' || echo '$(srcdir)/'`java.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf src/.libs src/_libs

classtobuild.stamp: $(tobuild_JAVA)
	@list1='$?'; list2=; if test -n "$$list1"; then \
	  for p in $$list1; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    list2="$$list2 $$d$$p"; \
	  done; \
	  echo '$(CLASSPATH_ENV) $(JAVAC) -d $(JAVAROOT) $(AM_JAVACFLAGS) $(JAVACFLAGS) '"$$list2"; \
	  $(CLASSPATH_ENV) $(JAVAC) -d $(JAVAROOT) $(AM_JAVACFLAGS) $(JAVACFLAGS) $$list2; \
	else :; fi
	echo timestamp > classtobuild.stamp
install-tobuildJAVA: classtobuild.stamp
	@$(NORMAL_INSTALL)
	test -z "$(tobuilddir)" || $(MKDIR_P) "$(DESTDIR)$(tobuilddir)"
	@test -n "$(tobuild_JAVA)" && test -n "$(tobuilddir)" || exit 0; \
	set x *.class; shift; test "$$1" != "*.class" || exit 0; \
	echo " $(INSTALL_DATA)" "$$@" "'$(DESTDIR)$(tobuilddir)/$$p'"; \
	$(INSTALL_DATA) "$$@" "$(DESTDIR)$(tobuilddir)"

uninstall-tobuildJAVA:
	@$(NORMAL_UNINSTALL)
	@test -n "$(tobuild_JAVA)" && test -n "$(tobuilddir)" || exit 0; \
	set x *.class; shift; test "$$1" != "*.class" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tobuilddir)' && rm -f" "$$@" ")"; \
	cd "$(DESTDIR)$(tobuilddir)" && rm -f "$$@"

clean-tobuildJAVA:
	-rm -f *.class classtobuild.stamp
install-dist_javaDATA: $(dist_java_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(javadir)" || $(MKDIR_P) "$(DESTDIR)$(javadir)"
	@list='$(dist_java_DATA)'; test -n "$(javadir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(javadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(javadir)" || exit $$?; \
	done

uninstall-dist_javaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_java_DATA)'; test -n "$(javadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(javadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(javadir)" && rm -f $$files
install-nobase_dist_javaDATA: $(nobase_dist_java_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(javadir)" || $(MKDIR_P) "$(DESTDIR)$(javadir)"
	@list='$(nobase_dist_java_DATA)'; test -n "$(javadir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(javadir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(javadir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(javadir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(javadir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_dist_javaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_dist_java_DATA)'; test -n "$(javadir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(javadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(javadir)" && rm -f $$files
install-nobase_nodist_javaDATA: $(nobase_nodist_java_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(javadir)" || $(MKDIR_P) "$(DESTDIR)$(javadir)"
	@list='$(nobase_nodist_java_DATA)'; test -n "$(javadir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(javadir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(javadir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(javadir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(javadir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_nodist_javaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_nodist_java_DATA)'; test -n "$(javadir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(javadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(javadir)" && rm -f $$files
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(nodist_check_SCRIPTS) \
	  $(nodist_check_DATA)
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) \
		classtobuild.stamp $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(tobuilddir)" "$(DESTDIR)$(javadir)" "$(DESTDIR)$(javadir)" "$(DESTDIR)$(javadir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	clean-tobuildJAVA mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_javaDATA install-includeHEADERS \
	install-nobase_dist_javaDATA install-nobase_nodist_javaDATA \
	install-tobuildJAVA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS \
	install-libLTLIBRARIES install-nodist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_javaDATA uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-nobase_dist_javaDATA \
	uninstall-nobase_nodist_javaDATA uninstall-nodist_binSCRIPTS \
	uninstall-tobuildJAVA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: all check check-am install install-am install-data-am \
	install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES clean-tobuildJAVA ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-data-hook install-dist_binSCRIPTS \
	install-dist_javaDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nobase_dist_javaDATA install-nobase_nodist_javaDATA \
	install-nodist_binSCRIPTS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip install-tobuildJAVA \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_binSCRIPTS uninstall-dist_javaDATA \
	uninstall-hook uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-nobase_dist_javaDATA \
	uninstall-nobase_nodist_javaDATA uninstall-nodist_binSCRIPTS \
	uninstall-tobuildJAVA


all: $(ALLS)
.PHONY: $(CLEAN_LOCAL)
clean-local: $(CLEAN_LOCAL)

clean-cleandirs:
	-test -z "$(CLEANDIRS)" || rm -rf $(CLEANDIRS)
VERSIONIFY_CACHE ?= $(top_srcdir)/.version
VERSIONIFY_PACKAGE ?= $(PACKAGE_TARNAME)
.PHONY: stamps
stamps: $(STAMPS)
%.stamp:
	$(AM_V_GEN) echo "$$(date): $?" >>$@
.c.i:
	$(COMPILE) -E -o $@ $<

.cc.ii:
	$(CXXCOMPILE) -E -o $@ $<
.i.i.c:
	grep -v '#' $< | tr -s '\n' '\n' >$@.tmp
	mv $@.tmp $@

.ii.ii.cc:
	grep -v '#' $< | tr -s '\n' '\n' >$@.tmp
	mv $@.tmp $@
install-data-hook: $(INSTALL_DATA_HOOKS)
install-exec-hook: $(INSTALL_EXEC_HOOKS)
uninstall-hook: $(UNINSTALL_HOOKS)

.PHONY check-TESTS: clean-semaphores
clean-semaphores:
	-$(build_aux_dir)/bin/semaphore-clean.sh

# An included Makefile that does not exist.  Regenerate the Makefile.
# Chances are that the missing file is no longer needed.  But if it is
# and cannot be regenerated, then we might loop...  FIXME: find a
# means to stop this.
%.mk:
	@if test ! -f $@; then						\
	  echo >&2 "Makefile:warning: "					\
	           "*** missing makefile, trying to proceed: $@" &&	\
	  echo "cd $(top_srcdir) && $(AUTOMAKE) --foreign" &&		\
	  ($(am__cd) $(top_srcdir) && $(AUTOMAKE) --foreign) &&		\
	  echo "cd $(top_builddir) &&  ./config.status --recheck" &&	\
	  ($(am__cd) $(top_builddir) && ./config.status --recheck)	\
	fi

# Try to disable -O2 by all means (or
# liburbiJNI.SWIGURBIStarterJavaUpcast from won't work).
override CXXFLAGS:=$(filter-out -O%,$(CXXFLAGS))

# Invoque SWIG and generate Java sources & C++ JNI code
# (liburbi_java.cc).
#
# It would be most useful to remove the output dir (so that there are
# no stray files from previous runs that may confuse us when trying to
# understand the generated code).  But this is the very same directory
# (urbi/) in which we also have compiled urbi/UMain.java and others to
# urbi/UMain.class.  So removing the directory is doomed to failure.
# Unless we generate SWIG files in another directory.  Meanwhile, do
# not remove the directory.
%.cc %/%.java %.cc.h: swig/%.i
#	$(AM_V_GEN)rm -rf $(java_src_outdir)
	$(AM_V_GEN)$(mkdir_p) $(java_src_outdir) $(DEPDIR)
	$(AM_V_at)test -n "$(SWIG)" || { echo "SWIG not defined"; exit 1; }
	$(AM_V_at)$(SWIG) $(SWIGFLAGS) -o $@.tmp $<
	$(AM_V_at)sed -e 's,$@.tmp,$@,'		\
	    <"$(DEPDIR)/$*.Tcc" >"$(DEPDIR)/$*.Pcc"
	$(AM_V_at)rm $(DEPDIR)/$*.Tcc
	$(AM_V_at)mv $@.tmp $@

-include $(DEPDIR)/java.Pcc

# Below this is a HUGE hack so that we construct a .jar containing
# _all_ java objects ie, .class from the normal java sources + .class
# from the generated java sources
gen-liburbi-java:
	$(AM_V_GEN)$(JAR) -cf $(notdir $(liburbijava_JAR)) $(liburbijava_OBJECTS)
	$(AM_V_at)$(mkdir_p) $(dir $(liburbijava_JAR))
	$(AM_V_at)mv -f $(notdir $(liburbijava_JAR)) $(dir $(liburbijava_JAR))

$(liburbijava_JAR): $(liburbijava_SRC) classtobuild.stamp
	$(AM_V_GEN)$(MAKE) -C . gen-liburbi-java
$(uobjectjava_JAR): uobjectjava
$(uobjectjava_withmain_JAR): uobjectjava_withmain
#JAR_RULES += balltrack
$(balltrack_JAR): balltrack
#JAR_RULES += bandwidth
$(bandwidth_JAR): bandwidth
#JAR_RULES += ping
$(ping_JAR): ping
#JAR_RULES += image
$(image_JAR): image
#JAR_RULES += mirror
$(mirror_JAR): mirror
#JAR_RULES += play
$(play_JAR): play
#JAR_RULES += record
$(record_JAR): record
#JAR_RULES += send
$(send_JAR): send
#JAR_RULES += sound
$(sound_JAR): sound
#JAR_RULES += talkie
$(talkie_JAR): talkie
$(test_all_JAR): test_all
$(test_java_JAR): test_java
$(test_timer_JAR): test_timer

# Generate all jars files
.SECONDEXPANSION:
$(JAR_RULES): $$(patsubst %.java,%.class,$$($$@_SRC))
	$(AM_V_GEN)$(JAR) -cf $(notdir $($@_JAR)) $+
	$(AM_V_at)mkdir -p $(dir $($@_JAR))
	$(AM_V_at)mv $(notdir $($@_JAR)) $(dir $($@_JAR))
# The generation of the *.class is perform by an Automake internal
# target that update classtobuild.stamp.
$(ALL_OBJECTS): classtobuild.stamp

# 	sample/URBIBallTrackingHead.launch
# 	sample/URBIBandWidth.launch
# 	sample/URBIImage.launch
# 	sample/URBIMirror.launch
# 	sample/URBIPing.launch
# 	sample/URBIPlay.launch
# 	sample/URBIRecord.launch
# 	sample/URBISend.launch
# 	sample/URBISound.launch
# 	sample/URBITalkie.launch

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
