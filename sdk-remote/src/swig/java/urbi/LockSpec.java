/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package urbi;

public class LockSpec {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected LockSpec(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(LockSpec obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        urbiJNI.delete_LockSpec(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public LockSpec(LockMode l, long maxQueueSize) {
    this(urbiJNI.new_LockSpec__SWIG_0(l.swigValue(), maxQueueSize), true);
  }

  public LockSpec(LockMode l) {
    this(urbiJNI.new_LockSpec__SWIG_1(l.swigValue()), true);
  }

  public void setLockMode(LockMode value) {
    urbiJNI.LockSpec_lockMode_set(swigCPtr, this, value.swigValue());
  }

  public LockMode getLockMode() {
    return LockMode.swigToEnum(urbiJNI.LockSpec_lockMode_get(swigCPtr, this));
  }

  public void setMaxQueueSize(long value) {
    urbiJNI.LockSpec_maxQueueSize_set(swigCPtr, this, value);
  }

  public long getMaxQueueSize() {
    return urbiJNI.LockSpec_maxQueueSize_get(swigCPtr, this);
  }

}
