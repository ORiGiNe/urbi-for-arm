/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package urbi;

public class LockableOstream {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected LockableOstream(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(LockableOstream obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        urbiJNI.delete_LockableOstream(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public LockableOstream(SWIGTYPE_p_std__streambuf sb) {
    this(urbiJNI.new_LockableOstream(SWIGTYPE_p_std__streambuf.getCPtr(sb)), true);
  }

  public void setSendBufferLock(SWIGTYPE_p_libport__Lockable value) {
    urbiJNI.LockableOstream_sendBufferLock_set(swigCPtr, this, SWIGTYPE_p_libport__Lockable.getCPtr(value));
  }

  public SWIGTYPE_p_libport__Lockable getSendBufferLock() {
    return new SWIGTYPE_p_libport__Lockable(urbiJNI.LockableOstream_sendBufferLock_get(swigCPtr, this), true);
  }

}
