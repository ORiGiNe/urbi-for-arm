/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package urbi;

public class urbi implements urbiConstants {
  public static SWIGTYPE_p_std__string getClientConnectionID(UAbstractClient cli) {
    return new SWIGTYPE_p_std__string(urbiJNI.getClientConnectionID(UAbstractClient.getCPtr(cli), cli), true);
  }

  public static UClient getDefaultClient() {
    long cPtr = urbiJNI.getDefaultClient();
    return (cPtr == 0) ? null : new UClient(cPtr, false);
  }

    // Parse an image format string.
 public  static UImageFormat parse_image_format(String arg0) {
    return UImageFormat.swigToEnum(urbiJNI.parse_image_format(arg0));
  }

    /// Conversion to string.
 public  static String format_string(UImageFormat f) {
    return urbiJNI.format_string__SWIG_0(f.swigValue());
  }

    /// Parse a sound format string.
 public  static USoundFormat parse_sound_format(String arg0) {
    return USoundFormat.swigToEnum(urbiJNI.parse_sound_format(arg0));
  }

    /// Conversion to string.
 public  static String format_string(USoundFormat f) {
    return urbiJNI.format_string__SWIG_1(f.swigValue());
  }

  public static String syncline_push(String srcdir, String file, long line) {
    return urbiJNI.syncline_push(srcdir, file, line);
  }

  public static char getSemicolon() {
    return urbiJNI.semicolon_get();
  }

  public static char getPipe() {
    return urbiJNI.pipe_get();
  }

  public static char getParallel() {
    return urbiJNI.parallel_get();
  }

  public static char getComma() {
    return urbiJNI.comma_get();
  }

  public static void execute() {
    urbiJNI.execute();
  }

  public static void exit(int code) {
    urbiJNI.exit(code);
  }

  public static UClient connect(String host) {
    return new UClient(urbiJNI.connect(host), false);
  }

  public static void disconnect(UClient client) {
    urbiJNI.disconnect(UClient.getCPtr(client), client);
  }

  public static UClient get_default_client() {
    return new UClient(urbiJNI.get_default_client(), false);
  }

  public static void setDefaultClient(UClient cl) {
    urbiJNI.setDefaultClient(UClient.getCPtr(cl), cl);
  }

    // Image format conversion. JPEG compression not implemented.
 public  static int convert(USound source, USound destination) {
    return urbiJNI.convert__SWIG_0(USound.getCPtr(source), source, USound.getCPtr(destination), destination);
  }

    // Image format conversion. JPEG compression not implemented.
 public  static int convert(UImage source, UImage destination) {
    return urbiJNI.convert__SWIG_1(UImage.getCPtr(source), source, UImage.getCPtr(destination), destination);
  }

  public static boolean is_propertytype(int i) {
    return urbiJNI.is_propertytype(i);
  }

  public static String name(UProperty u) {
    return urbiJNI.name(u.swigValue());
  }

  public static UProperty uproperty(String cp) {
    return UProperty.swigToEnum(urbiJNI.uproperty(cp));
  }

  public static UContextImpl getCurrentContext() {
    long cPtr = urbiJNI.getCurrentContext();
    return (cPtr == 0) ? null : new UContextImpl(cPtr, false);
  }

  public static void setCurrentContext(UContextImpl arg0) {
    urbiJNI.setCurrentContext(UContextImpl.getCPtr(arg0), arg0);
  }

  public static void echo(String format) {
    urbiJNI.echo(format);
  }

  public static LockSpec getLOCK_FUNCTION_DROP() {
    long cPtr = urbiJNI.LOCK_FUNCTION_DROP_get();
    return (cPtr == 0) ? null : new LockSpec(cPtr, false);
  }

  public static LockSpec getLOCK_FUNCTION_KEEP_ONE() {
    long cPtr = urbiJNI.LOCK_FUNCTION_KEEP_ONE_get();
    return (cPtr == 0) ? null : new LockSpec(cPtr, false);
  }

  public static UObjectHub getUObjectHub(String n) {
    long cPtr = urbiJNI.getUObjectHub(n);
    return (cPtr == 0) ? null : new UObjectHub(cPtr, false);
  }

  public static UObjectCPP getUObject(String n) {
    long cPtr = urbiJNI.getUObject(n);
    return (cPtr == 0) ? null : new UObjectCPP(cPtr, false);
  }

  public static void uobject_unarmorAndSend(String str) {
    urbiJNI.uobject_unarmorAndSend(str);
  }

  public static void send(String str) {
    urbiJNI.send__SWIG_0(str);
  }

  public static UObjectMode getRunningMode() {
    return UObjectMode.swigToEnum(urbiJNI.getRunningMode());
  }

  public static boolean isPluginMode() {
    return urbiJNI.isPluginMode();
  }

  public static boolean isRemoteMode() {
    return urbiJNI.isRemoteMode();
  }

    /// Set maximum number of threads to use for threaded calls (0=unlimited).
 public  static void setThreadLimit(long nThreads) {
    urbiJNI.setThreadLimit(nThreads);
  }

    /// Return current hostname mangled to fit into an urbiscript variable name.
 public  static String getFilteredHostname() {
    return urbiJNI.getFilteredHostname();
  }

  public static int urbi_launch(int argc, String[] argv, UrbiRoot root) {
    return urbiJNI.urbi_launch(argc, argv, UrbiRoot.getCPtr(root), root);
  }

  public static int urbi_main(int argc, String[] argv, UrbiRoot root, boolean block, boolean errors) {
    return urbiJNI.urbi_main(argc, argv, UrbiRoot.getCPtr(root), root, block, errors);
  }

  public static int main(int argc, String[] argv, UrbiRoot root, boolean block, boolean errors) {
    return urbiJNI.main__SWIG_0(argc, argv, UrbiRoot.getCPtr(root), root, block, errors);
  }

  public static int main(int argc, String[] argv, UrbiRoot root, boolean block) {
    return urbiJNI.main__SWIG_1(argc, argv, UrbiRoot.getCPtr(root), root, block);
  }

  public static int main(int argc, String[] argv, UrbiRoot root) {
    return urbiJNI.main__SWIG_2(argc, argv, UrbiRoot.getCPtr(root), root);
  }

  public static int initialize(String host, int port, long buflen, boolean exitOnDisconnect, boolean server, StringVector files, boolean useSyncClient) {
    return urbiJNI.initialize__SWIG_0(host, port, buflen, exitOnDisconnect, server, StringVector.getCPtr(files), files, useSyncClient);
  }

  public static int initialize(String host, int port, long buflen, boolean exitOnDisconnect, boolean server, StringVector files) {
    return urbiJNI.initialize__SWIG_1(host, port, buflen, exitOnDisconnect, server, StringVector.getCPtr(files), files);
  }

  public static int initialize(String host, int port, long buflen, boolean exitOnDisconnect, boolean server) {
    return urbiJNI.initialize__SWIG_2(host, port, buflen, exitOnDisconnect, server);
  }

  public static int initialize(String host, int port, long buflen, boolean exitOnDisconnect) {
    return urbiJNI.initialize__SWIG_3(host, port, buflen, exitOnDisconnect);
  }

}
