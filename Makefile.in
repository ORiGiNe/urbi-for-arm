# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Initialize some common variables so that we can always use +=.  Do
# not initialize TESTS, otherwise Automake sees empty test suites
# everywhere.

# This file is meant to be included only by the top-level Makefile.am.

# Define devdir to empty if this file is loaded from dev/Makefile.am,
# or to "dev/" if this file is loaded from the top-level.





VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = README $(am__configure_deps) $(dist_bin_SCRIPTS) \
	$(dist_converted_DATA) $(dist_geshi_DATA) $(dist_images_DATA) \
	$(dist_jpeg_DATA) $(dist_kernel_include_HEADERS) \
	$(dist_lisp_DATA) $(dist_noinst_DATA) $(dist_noinst_SCRIPTS) \
	$(dist_object_include_HEADERS) $(dist_runner_include_HEADERS) \
	$(dist_sources_DATA) $(dist_urbi_DATA) \
	$(dist_urbi_include_HEADERS) $(dist_urbi_ros_DATA) \
	$(include_HEADERS) $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/build-aux/make/bootstrap.mk \
	$(srcdir)/build-aux/make/build-aux.mk \
	$(srcdir)/build-aux/make/build-farm.mk \
	$(srcdir)/build-aux/make/init.mk \
	$(srcdir)/build-aux/make/package-version.mk \
	$(srcdir)/debian/local.mk $(srcdir)/dev/local.mk \
	$(srcdir)/include/local.mk $(srcdir)/share/emacs/local.mk \
	$(srcdir)/share/geshi/local.mk $(srcdir)/share/images/local.mk \
	$(srcdir)/share/local.mk $(srcdir)/share/pkgconfig/local.mk \
	$(srcdir)/share/urbi/local.mk $(srcdir)/urbi.bat.in \
	$(top_srcdir)/build-aux/bin/bison++.in \
	$(top_srcdir)/build-aux/bin/flex++.in $(top_srcdir)/configure \
	$(top_srcdir)/scripts/bf-post-install.in \
	$(top_srcdir)/scripts/common.sh.in \
	$(top_srcdir)/scripts/install-boost.in \
	$(top_srcdir)/scripts/install-java.in \
	$(top_srcdir)/sdk-remote/doc/sdk-remote-java.dox.in \
	$(top_srcdir)/sdk-remote/doc/sdk-remote.dox.in \
	$(top_srcdir)/sdk-remote/sdk/java/param.mk.in \
	$(top_srcdir)/sdk-remote/sdk/param.mk.in \
	$(top_srcdir)/sdk-remote/sdk/umake-java.in \
	$(top_srcdir)/sdk-remote/sdk/umake-link.in \
	$(top_srcdir)/sdk-remote/sdk/umake.in \
	$(top_srcdir)/sdk-remote/sdk/urbi-launch-java.in \
	$(top_srcdir)/sdk-remote/sdk/wrapper.sh.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/Main.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBIBallTrackingHead.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBIBandWidth.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBIImage.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBIMirror.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBIPing.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBIPlay.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBIRecord.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBISend.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBISound.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/URBITalkie.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/test.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/uobjectjava.launch.in \
	$(top_srcdir)/sdk-remote/src/swig/java/sample/uobjectjava_withmain.launch.in \
	$(top_srcdir)/sdk-remote/src/tests/bin/urbi-launch.in \
	$(top_srcdir)/sdk-remote/src/tests/bin/urbi-send.in \
	$(top_srcdir)/sdk-remote/src/tests/bin/wrapper.in \
	$(top_srcdir)/share/pkgconfig/urbi.pc.in \
	$(top_srcdir)/share/urbi/package-info.u.in \
	$(top_srcdir)/share/urbi/platform.u.in \
	$(top_srcdir)/src/kernel/config.h.in \
	$(top_srcdir)/tests/bin/urbi.in build-aux/config.guess \
	build-aux/config.sub build-aux/depcomp build-aux/elisp-comp \
	build-aux/install-sh build-aux/ltmain.sh build-aux/missing
bin_PROGRAMS =
@STATIC_BUILD_FALSE@am__append_1 = sdk-remote/src/bin/urbi-launch$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/tests/m4/urbi-tests.m4 \
	$(top_srcdir)/build-aux/m4/acx_pthread.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_classpath.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_java_home.m4 \
	$(top_srcdir)/build-aux/m4/ax_java_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_pkg_swig.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_jar.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_java.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_java_works.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_javac.m4 \
	$(top_srcdir)/build-aux/m4/ax_prog_javac_works.m4 \
	$(top_srcdir)/build-aux/m4/boost.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/m4/m4-after.m4 \
	$(top_srcdir)/build-aux/m4/package-version.m4 \
	$(top_srcdir)/build-aux/m4/pthread-sources.m4 \
	$(top_srcdir)/build-aux/m4/require-progs.m4 \
	$(top_srcdir)/build-aux/m4/tc-prog.m4 \
	$(top_srcdir)/build-aux/m4/urbi-append-flags.m4 \
	$(top_srcdir)/build-aux/m4/urbi-apple.m4 \
	$(top_srcdir)/build-aux/m4/urbi-arg-progs.m4 \
	$(top_srcdir)/build-aux/m4/urbi-arg.m4 \
	$(top_srcdir)/build-aux/m4/urbi-boost.m4 \
	$(top_srcdir)/build-aux/m4/urbi-build-aux.m4 \
	$(top_srcdir)/build-aux/m4/urbi-canonical-host.m4 \
	$(top_srcdir)/build-aux/m4/urbi-compilation-mode.m4 \
	$(top_srcdir)/build-aux/m4/urbi-config-scripts.m4 \
	$(top_srcdir)/build-aux/m4/urbi-dirs.m4 \
	$(top_srcdir)/build-aux/m4/urbi-distcheck-configure-flags.m4 \
	$(top_srcdir)/build-aux/m4/urbi-doc.m4 \
	$(top_srcdir)/build-aux/m4/urbi-enable-doc-sections.m4 \
	$(top_srcdir)/build-aux/m4/urbi-float-check.m4 \
	$(top_srcdir)/build-aux/m4/urbi-isystem.m4 \
	$(top_srcdir)/build-aux/m4/urbi-lib-suffix.m4 \
	$(top_srcdir)/build-aux/m4/urbi-libport.m4 \
	$(top_srcdir)/build-aux/m4/urbi-libtool.m4 \
	$(top_srcdir)/build-aux/m4/urbi-module-checks.m4 \
	$(top_srcdir)/build-aux/m4/urbi-module.m4 \
	$(top_srcdir)/build-aux/m4/urbi-package-info.m4 \
	$(top_srcdir)/build-aux/m4/urbi-package-kind.m4 \
	$(top_srcdir)/build-aux/m4/urbi-pkg-config.m4 \
	$(top_srcdir)/build-aux/m4/urbi-pragma.m4 \
	$(top_srcdir)/build-aux/m4/urbi-prog-cxx.m4 \
	$(top_srcdir)/build-aux/m4/urbi-prog-latex.m4 \
	$(top_srcdir)/build-aux/m4/urbi-pthread.m4 \
	$(top_srcdir)/build-aux/m4/urbi-resolve-dir.m4 \
	$(top_srcdir)/build-aux/m4/urbi-shlibext.m4 \
	$(top_srcdir)/build-aux/m4/urbi-sockets.m4 \
	$(top_srcdir)/build-aux/m4/urbi-ufloat.m4 \
	$(top_srcdir)/build-aux/m4/urbi-win32.m4 \
	$(top_srcdir)/build-aux/m4/warning.m4 \
	$(top_srcdir)/build-aux/m4/xenomai.m4 \
	$(top_srcdir)/sdk-remote/src/swig/java/liburbijava.ac \
	$(top_srcdir)/modules/modules.ac \
	$(top_srcdir)/modules/algorithm/md5/module.ac.auto \
	$(top_srcdir)/modules/system/ros/module.ac.auto \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/kernel/config.h
CONFIG_CLEAN_FILES = build-aux/bin/bison++ build-aux/bin/flex++ \
	sdk-remote/src/swig/java/sample/test.launch \
	sdk-remote/src/swig/java/sample/uobjectjava.launch \
	sdk-remote/src/swig/java/sample/uobjectjava_withmain.launch \
	sdk-remote/src/swig/java/sample/URBIPing.launch \
	sdk-remote/src/swig/java/sample/URBIRecord.launch \
	sdk-remote/src/swig/java/sample/Main.launch \
	sdk-remote/src/swig/java/sample/URBISound.launch \
	sdk-remote/src/swig/java/sample/URBISend.launch \
	sdk-remote/src/swig/java/sample/URBIBandWidth.launch \
	sdk-remote/src/swig/java/sample/URBIPlay.launch \
	sdk-remote/src/swig/java/sample/URBIImage.launch \
	sdk-remote/src/swig/java/sample/URBITalkie.launch \
	sdk-remote/src/swig/java/sample/URBIBallTrackingHead.launch \
	sdk-remote/src/swig/java/sample/URBIMirror.launch \
	sdk-remote/doc/sdk-remote.dox \
	sdk-remote/doc/sdk-remote-java.dox sdk-remote/sdk/umake \
	sdk-remote/sdk/umake-link sdk-remote/sdk/umake-java \
	sdk-remote/sdk/urbi-launch-java sdk-remote/sdk/wrapper.sh \
	sdk-remote/sdk/param.mk sdk-remote/sdk/java/param.mk \
	scripts/bf-post-install scripts/common.sh \
	scripts/install-boost scripts/install-java urbi.bat \
	share/pkgconfig/urbi.pc share/urbi/package-info.u \
	sdk-remote/src/tests/bin/umake-java \
	sdk-remote/src/tests/bin/umake-link \
	sdk-remote/src/tests/bin/umake-shared \
	sdk-remote/src/tests/bin/umake \
	sdk-remote/src/tests/bin/urbi-launch-java \
	sdk-remote/src/tests/bin/urbi-send
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(topleveldir)" "$(DESTDIR)$(converteddir)" \
	"$(DESTDIR)$(geshidir)" "$(DESTDIR)$(imagesdir)" \
	"$(DESTDIR)$(jpegdir)" "$(DESTDIR)$(lispdir)" \
	"$(DESTDIR)$(sourcesdir)" "$(DESTDIR)$(urbidir)" \
	"$(DESTDIR)$(urbi_rosdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(urbidir)" "$(DESTDIR)$(urbi_package_infodir)" \
	"$(DESTDIR)$(kernel_includedir)" \
	"$(DESTDIR)$(object_includedir)" \
	"$(DESTDIR)$(runner_includedir)" \
	"$(DESTDIR)$(urbi_includedir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(object_includedir)" \
	"$(DESTDIR)$(parser_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
PROGRAMS = $(bin_PROGRAMS)
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_noinst_SCRIPTS) \
	$(nodist_bin_SCRIPTS) $(nodist_noinst_SCRIPTS) \
	$(toplevel_SCRIPTS)
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
DATA = $(dist_converted_DATA) $(dist_geshi_DATA) $(dist_images_DATA) \
	$(dist_jpeg_DATA) $(dist_lisp_DATA) $(dist_noinst_DATA) \
	$(dist_sources_DATA) $(dist_urbi_DATA) $(dist_urbi_ros_DATA) \
	$(nodist_noinst_DATA) $(nodist_pkgconfig_DATA) \
	$(nodist_urbi_DATA) $(nodist_urbi_package_info_DATA) \
	$(noinst_DATA)
HEADERS = $(dist_kernel_include_HEADERS) \
	$(dist_object_include_HEADERS) $(dist_runner_include_HEADERS) \
	$(dist_urbi_include_HEADERS) $(include_HEADERS) \
	$(nodist_object_include_HEADERS) \
	$(nodist_parser_include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.bz2
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINDIR = @BINDIR@
BISON = @BISON@
BISON_VERSION = @BISON_VERSION@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LDFLAGS = @BOOST_DATE_TIME_LDFLAGS@
BOOST_DATE_TIME_LDPATH = @BOOST_DATE_TIME_LDPATH@
BOOST_DATE_TIME_LIBS = @BOOST_DATE_TIME_LIBS@
BOOST_HEADER_DIR = @BOOST_HEADER_DIR@
BOOST_LDPATH = @BOOST_LDPATH@
BOOST_LIBRARY_GLOB = @BOOST_LIBRARY_GLOB@
BOOST_REGEX_LDFLAGS = @BOOST_REGEX_LDFLAGS@
BOOST_REGEX_LDPATH = @BOOST_REGEX_LDPATH@
BOOST_REGEX_LIBS = @BOOST_REGEX_LIBS@
BOOST_ROOT = @BOOST_ROOT@
BOOST_SYSTEM_LDFLAGS = @BOOST_SYSTEM_LDFLAGS@
BOOST_SYSTEM_LDPATH = @BOOST_SYSTEM_LDPATH@
BOOST_SYSTEM_LIBS = @BOOST_SYSTEM_LIBS@
BOOST_THREAD_LDFLAGS = @BOOST_THREAD_LDFLAGS@
BOOST_THREAD_LDPATH = @BOOST_THREAD_LDPATH@
BOOST_THREAD_LIBS = @BOOST_THREAD_LIBS@
BOOST_VERSION = @BOOST_VERSION@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAGS_ARCH = @CFLAGS_ARCH@
COMPILATION_MODE_DEBUG = @COMPILATION_MODE_DEBUG@
COMPILATION_MODE_SPACE = @COMPILATION_MODE_SPACE@
COMPILATION_MODE_SPEED = @COMPILATION_MODE_SPEED@
CONVERT = @CONVERT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXFLAGS_ARCH = @CXXFLAGS_ARCH@
CXX_ARCH = @CXX_ARCH@
CXX_FLAVOR = @CXX_FLAVOR@
CXX_VERSION = @CXX_VERSION@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISABLED_MODULES = @DISABLED_MODULES@
DISABLED_MODULES_U = @DISABLED_MODULES_U@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DLLTOOL = @DLLTOOL@
DLMODEXT = @DLMODEXT@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ECLIPSE_UObjectJava_ARGS = @ECLIPSE_UObjectJava_ARGS@
ECLIPSE_UObjectJava_withmain_ARGS = @ECLIPSE_UObjectJava_withmain_ARGS@
ECLIPSE_URBIBallTrackingHead_ARGS = @ECLIPSE_URBIBallTrackingHead_ARGS@
ECLIPSE_URBIBandWidth_ARGS = @ECLIPSE_URBIBandWidth_ARGS@
ECLIPSE_URBIImage_ARGS = @ECLIPSE_URBIImage_ARGS@
ECLIPSE_URBIMirror_ARGS = @ECLIPSE_URBIMirror_ARGS@
ECLIPSE_URBIPing_ARGS = @ECLIPSE_URBIPing_ARGS@
ECLIPSE_URBIPlay_ARGS = @ECLIPSE_URBIPlay_ARGS@
ECLIPSE_URBIRecord_ARGS = @ECLIPSE_URBIRecord_ARGS@
ECLIPSE_URBISend_ARGS = @ECLIPSE_URBISend_ARGS@
ECLIPSE_URBISound_ARGS = @ECLIPSE_URBISound_ARGS@
ECLIPSE_URBITalkie_ARGS = @ECLIPSE_URBITalkie_ARGS@
ECLIPSE_test_ARGS = @ECLIPSE_test_ARGS@
EGREP = @EGREP@
EMACS = @EMACS@
EMACSLOADPATH = @EMACSLOADPATH@
ENABLED_MODULES = @ENABLED_MODULES@
ENABLED_MODULES_U = @ENABLED_MODULES_U@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FLEX = @FLEX@
FLEX_VERSION = @FLEX_VERSION@
GREP = @GREP@
HAVE_ORTP = @HAVE_ORTP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVACFLAGS = @JAVACFLAGS@
JAVAC_PATH_NAME = @JAVAC_PATH_NAME@
JAVAFLAGS = @JAVAFLAGS@
JAVAPREFIX = @JAVAPREFIX@
JAVA_CPPFLAGS = @JAVA_CPPFLAGS@
JAVA_HOME = @JAVA_HOME@
JAVA_LDFLAGS = @JAVA_LDFLAGS@
JAVA_LIBS = @JAVA_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBPORT_BUILDPREFIX = @LIBPORT_BUILDPREFIX@
LIBPORT_SRCDIR = @LIBPORT_SRCDIR@
LIBS = 
LIBSFX = @LIBSFX@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORTP_CFLAGS = @ORTP_CFLAGS@
ORTP_LIBS = @ORTP_LIBS@
ORTP_VERSION = @ORTP_VERSION@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BRAND = @PACKAGE_BRAND@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_COPYRIGHT = @PACKAGE_COPYRIGHT@
PACKAGE_COPYRIGHT_HOLDER = @PACKAGE_COPYRIGHT_HOLDER@
PACKAGE_COPYRIGHT_YEARS = @PACKAGE_COPYRIGHT_YEARS@
PACKAGE_KIND = @PACKAGE_KIND@
PACKAGE_MAJOR = @PACKAGE_MAJOR@
PACKAGE_MINOR = @PACKAGE_MINOR@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_PATCHLEVEL = @PACKAGE_PATCHLEVEL@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFCROP = @PDFCROP@
PDFLATEX = @PDFLATEX@
PKG_CONFIG = @PKG_CONFIG@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LDFLAGS = @PTHREAD_LDFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PTHREAD_SOURCES = @PTHREAD_SOURCES@
RANLIB = @RANLIB@
ROS_CPPFLAGS = @ROS_CPPFLAGS@
ROS_LDFLAGS = @ROS_LDFLAGS@
ROS_LIBS = @ROS_LIBS@
ROS_PREFIX = @ROS_PREFIX@
ROS_ROOT = @ROS_ROOT@
ROS_RPATH = @ROS_RPATH@
ROS_SETUP = @ROS_SETUP@
ROS_VERSION = @ROS_VERSION@
SDK_CFLAGS = @SDK_CFLAGS@
SDK_CXXFLAGS = @SDK_CXXFLAGS@
SDK_LDFLAGS = @SDK_LDFLAGS@
SDK_LIBS = @SDK_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHARED_LIBS_ENVVAR_NAME = @SHARED_LIBS_ENVVAR_NAME@
SHARED_LIBS_ENVVAR_VALUE = @SHARED_LIBS_ENVVAR_VALUE@
SHELL = @SHELL@
SHLIBEXT = @SHLIBEXT@
SOCKETS_LIBS = @SOCKETS_LIBS@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIG_VERSION = @SWIG_VERSION@
TC_COMPILER_FLAGS_NAME = @TC_COMPILER_FLAGS_NAME@
TEX4HT = @TEX4HT@
URBI_ENV = @URBI_ENV@
URBI_HOST = @URBI_HOST@
URBI_HOST_COMP = @URBI_HOST_COMP@
URBI_HOST_CPU = @URBI_HOST_CPU@
URBI_HOST_OS = @URBI_HOST_OS@
UUDECODE = @UUDECODE@
VERSION = @VERSION@
VISIBILITY_CXXFLAGS = @VISIBILITY_CXXFLAGS@
WARNING_CXXFLAGS = @WARNING_CXXFLAGS@
X11_CPPFLAGS = @X11_CPPFLAGS@
X11_LDADD = @X11_LDADD@
XENOMAI_PATH = @XENOMAI_PATH@
XENOMAI_POSIX_CPPFLAGS = @XENOMAI_POSIX_CPPFLAGS@
XENOMAI_POSIX_LDFLAGS = @XENOMAI_POSIX_LDFLAGS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_configure_args = @ac_configure_args@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_cv_distcheck_configure_flags = @ac_cv_distcheck_configure_flags@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
branddir = @branddir@
brandincludedir = @brandincludedir@
brandlibdir = @brandlibdir@
brandlibexecdir = @brandlibexecdir@
brandsharedir = @brandsharedir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_doc_sections = @enable_doc_sections@
enginedir = @enginedir@
envdir = @envdir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kbranddir = @kbranddir@
kernel_builddir = @kernel_builddir@
kernel_srcdir = @kernel_srcdir@
kerneldir = @kerneldir@
kernelincludedir = @kernelincludedir@
libdir = @libdir@
libdirname = @libdirname@
libexecdir = @libexecdir@
lispdir = @lispdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
modules_srcdir = @modules_srcdir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
remotedir = @remotedir@
sbindir = @sbindir@
sdk_remote_builddir = @sdk_remote_builddir@
sdk_remote_srcdir = @sdk_remote_srcdir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
test_uobjectsdir = @test_uobjectsdir@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
umaindir = @umaindir@
uobjectsdir = @uobjectsdir@
urbi_uobjectsdir = @urbi_uobjectsdir@
urbiincludedir = @urbiincludedir@

# Dependencies on "all".

# boostrap itself touches the timestamp.  Make it a dependency on all
# instead of being part of BUILT_SOURCES, since the latter is pushed
# in CLEANFILES, which means that "make clean" would trigger a
# reconfiguration!
ALLS = $(srcdir)/bootstrap.stamp
AM_CFLAGS = 
AM_CPPFLAGS = 
AM_CXXFLAGS = 
# We work on C++ only.
AM_DEFAULT_SOURCE_EXT = .cc
AM_LDFLAGS = 
# Require 1.11.1 asap.
# http://lists.gnu.org/archive/html/automake/2009-12/msg00012.html
# Use bzip2 only.
AUTOMAKE_OPTIONS = 1.11 no-dist-gzip dist-bzip2 -Wno-portability
BUILDCHECK_ENVIRONMENT = $(CHECK_ENVIRONMENT)

# Make sure config.h.in is up to date.  This looks like an Automake
# bug to me.
# The buildfarm calls bf-post-install without using the relocatable
# target.  So be sure to keep these up to date all the time.
BUILT_SOURCES = $(FROM_GEN) $(precompiled_symbols_hh) \
	$(nodist_urbi_DATA) $(top_srcdir)/src/kernel/config.h.in \
	src/kernel/config.h scripts/bf-post-install scripts/common.sh \
	scripts/install-boost scripts/install-java
CHECK_CLEANFILES = 
CHECK_ENVIRONMENT = 

# Visual Studio Debugger PDB Files (C++).
# http://msdn2.microsoft.com/en-us/library/yd4f8bd1.aspx.
# Files created by MSVC++ and our cl.exe.

# Files which are not shipped should be cleaned.
CLEANFILES = $(BUILT_SOURCES) vc80.pdb $(PROGRAMS:=.auto.*) \
	$(EXTRA_PROGRAMS:=.auto.*) lt-*.obj $(nodist_check_SCRIPTS) \
	$(nodist_noinst_SCRIPTS) $(STAMPS) *.i *.ii *.i.c *.ii.cc
CLEANDIRS = 
DISTCLEANFILES = 
EXTRA_DATA = 

# Ship it, so that when we are detached from a repository, we still
# have it available.  Besides, since "dist" depends on "EXTRA_DIST",
# it ensures that each time we run "make dist", ".version" is updated,
# which is what we want.

# build-aux.

# Used by make-relocatable.
EXTRA_DIST = $(build_aux_dir)/bin/ls-files $(VERSIONIFY) \
	$(VERSIONIFY_CACHE) $(build_aux_srcdir)/bin/bootstrap \
	$(build_aux_srcdir)/bin/instrument \
	$(build_aux_srcdir)/bin/instrument.supp \
	$(build_aux_srcdir)/bin/move-if-change \
	$(build_aux_srcdir)/bin/print-env \
	$(build_aux_srcdir)/bin/semaphore-clean.sh $(call \
	ls_files,@{build-aux}/lib/perl/*) build-aux/bin/bison++.in \
	build-aux/bin/bootstrap-modules build-aux/bin/flex++.in \
	build-aux/bin/fuse-switch build-aux/bin/output-to-dot \
	build-aux/bin/studentize build-aux/bin/tex4ht-post \
	$(DEBIAN_GENERATED:=.in) debian/README.Debian \
	debian/README.source debian/compat debian/control \
	debian/copyright debian/docs debian/info debian/source/format \
	debian/urbi-doc.docs $(devdir)ast-all-gen \
	$(devdir)ast-cloner-gen $(devdir)ast-transformer-gen \
	$(devdir)ast-default-visitor-gen $(devdir)ast-dot-printer-gen \
	$(devdir)ast-fwd-gen $(devdir)ast-gen.mk \
	$(devdir)ast-graph-gen $(devdir)ast-ignores-gen \
	$(devdir)ast-nodes-gen $(devdir)ast-nodes-mk-gen \
	$(devdir)ast-pretty-printer-gen $(devdir)ast-readme-gen \
	$(devdir)ast-visitor-gen $(devdir)ast.py $(devdir)tools.py \
	$(devdir)transform-all-gen \
	$(devdir)transform-proxy-visitors-gen $(FROM_GEN:=.gen) \
	$(precompiled_symbols_hh).gen build-aux/bin/check-lib-deps \
	build-aux/bin/check-include-deps
EXTRA_HEADERS = 
EXTRA_LTLIBRARIES = 
INSTALLCHECK_ENVIRONMENT = $(CHECK_ENVIRONMENT)
M4SHFLAGS = 
MAINTAINERCLEANFILES = $(srcdir)/bootstrap.stamp
MOSTLYCLEANFILES = 

# Sometimes it is really convenient to see the output of the
# preprocessor.  But it's a pain to run the command by hand.

# Sometimes, the remaining # lines are a nuisance: the error is not
# reported against the preprocessed file.  And then we also want to
# compile these files, that's why I used extensions that can be
# directly compiled (*.c and *.cc).
SUFFIXES = .i .ii .i.c .ii.cc
TESTS_ENVIRONMENT = 
TFAIL_TESTS = 
XFAIL_TESTS = 
dist_bin_SCRIPTS = 
dist_noinst_DATA = $(BOOTSTRAP_sources) $(srcdir)/bootstrap.stamp
dist_noinst_SCRIPTS = bootstrap
include_HEADERS = 
lib_LTLIBRARIES = 
nodist_bin_SCRIPTS = 
nodist_check_DATA = 
nodist_check_SCRIPTS = 
nodist_noinst_DATA = 
nodist_noinst_SCRIPTS = 
noinst_LTLIBRARIES = 

# Because we use sysexists, which uses 77, we can't use the
# traditional 77 to mean SKIP tests.  Rather, use 176 consistently.
SKIP_STATUS = 176

# Automake still does not honor AM_LDADD.
LDADD = $(AM_LDADD)
build_aux_builddir = $(top_builddir)/build-aux
build_aux_dir = $(build_aux_srcdir)
build_aux_srcdir = $(top_srcdir)/build-aux
move_if_change = $(build_aux_dir)/bin/move-if-change
move_if_change_run = $(move_if_change) --color $(if $(V:0=),--verbose,--silent)

# CLEAN_LOCAL: instead of hooking clean-local, which is troublesome
# when there are AM_CONDITIONAL used, append the target to
# CLEAN_LOCAL.
CLEAN_LOCAL = clean-cleandirs
VERSIONIFY = $(top_srcdir)/build-aux/bin/versionify
VERSIONIFYFLAGS = --prefix=URBI_SDK_ \
	--header=sdk-remote/include/urbi/revision.hh
VERSIONIFY_RUN = \
  $(VERSIONIFY)					\
  --directory					\
  --cache=$(VERSIONIFY_CACHE)			\
  --package="$(VERSIONIFY_PACKAGE)"


# See an example of use in sdk-remote/src/Makefile.am.
AT_V_PATCH = $(AT_V_PATCH_$(V))
AT_V_PATCH_ = $(AT_V_PATCH_$(AM_DEFAULT_VERBOSITY))
AT_V_PATCH_0 = @echo "  PATCH " $^;

# Running continuously the test suite is costly, especially for the
# buildfarm.  Some changes have no impact whatsoever on the kernel,
# uconsole etc, for instance changes in the documentation.  In that
# case we would like not to rerun the test suite.  But spelling out
# the exact dependencies (on the libraries, the binaries, the
# wrappers, but also the urbi/*.u files) is hard.  So we create stamp
# files that make it easier to depend on changes of some components.

# urbi.stamp is defined and built in share/urbi/local.mk.

# All the libraries.

# All the executables.

# Everything.
STAMPS = urbi.stamp libraries.stamp executables.stamp all.stamp
noinst_DATA = $(STAMPS)

# ls_files_in_dir DIR GLOBBING-PATTERNS
# -------------------------------------
# The files in DIR that match the GLOBBING-PATTERNS.
#
# The GLOBBING-PATTERNS are put in single quotes to avoid being
# caught by the shell.
ls_files_in_dir = \
  $(or									   \
    $(shell $(build_aux_dir)/bin/ls-files -s $(1) $(patsubst %,'%',$(2))), \
    $(error ls-files in $(1) returned nothing for: $(2)))


# ls_files GLOBBING-PATTERNS
# --------------------------
# The files in $(srcdir) that match the GLOBBING-PATTERNS.
ls_files = \
  $(call ls_files_in_dir,$(srcdir),$(1))


# make_path REPLACEMENT-PATTERN, DIR...
# -------------------------------------
# Apply REPLACEMENT-PATTERN to each DIR, and join the result with colons.
# For instance:
# (call make_path,foo/%/bar,a b c)
#  => foo/a/bar:foo/b/bar:foo/c/bar
build_aux_empty := 
build_aux_space := $(build_aux_empty) $(build_aux_empty)
make_path = \
  $(subst $(build_aux_space),:,$(patsubst %,$(1),$(2)))

INSTALL_DATA_HOOKS = 
INSTALL_EXEC_HOOKS = 
UNINSTALL_HOOKS = 
FETCH_BM4 = wget -O $(build_aux_dir)/m4/boost.m4
BOOTSTRAP_CFG = .bootstrap.cfg

# Everything that should trigger a re-boostrapping.
BOOTSTRAP_sources = \
  $(BOOTSTRAP_CFG)                              \
  $(build_aux_dir)/bin/bootstrap                \
  $(build_aux_dir)/make/bootstrap.mk

ACLOCAL_AMFLAGS = -I build-aux/m4 -I build-aux -I sdk-remote/sdk -I tests/m4

# To keep the time stamps up to date, we need to compile our
# dependencies first, so process sdk-remote and src before "." (where
# timestamps are).  It it tests and doc that depend on these time
# stamps, so handle them after ".".
SUBDIRS = sdk-remote src modules . tests doc
DIST_SUBDIRS = $(SUBDIRS) bison
URBI_VERSION = $(shell echo $(VERSION) | sed -e 's/-/./g')
PACKAGE_DEBIAN = urbi_$(URBI_VERSION)
DEB_ARCH = $(shell dpkg-architecture -qDEB_BUILD_ARCH)
DEBIAN_GENERATED = \
  debian/changelog				\
  debian/rules					\
  debian/urbi-dev.install			\
  debian/urbi-doc.install			\
  debian/urbi.install

devdir = dev/
@INSTALL_KERNEL_HEADERS_FALSE@urbi_includedir = 
@INSTALL_KERNEL_HEADERS_TRUE@urbi_includedir = $(brandincludedir)/urbi
@INSTALL_KERNEL_HEADERS_FALSE@kernel_includedir = 
@INSTALL_KERNEL_HEADERS_TRUE@kernel_includedir = $(urbi_includedir)/kernel
@INSTALL_KERNEL_HEADERS_FALSE@object_includedir = 
@INSTALL_KERNEL_HEADERS_TRUE@object_includedir = $(urbi_includedir)/object
@INSTALL_KERNEL_HEADERS_FALSE@parser_includedir = 
@INSTALL_KERNEL_HEADERS_TRUE@parser_includedir = $(urbi_includedir)/parser
@INSTALL_KERNEL_HEADERS_FALSE@runner_includedir = 
@INSTALL_KERNEL_HEADERS_TRUE@runner_includedir = $(urbi_includedir)/runner
dist_urbi_include_HEADERS = \
  include/urbi/sdk.hh				\
  include/urbi/sdk.hxx

dist_kernel_include_HEADERS = \
  include/urbi/kernel/fwd.hh			\
  include/urbi/kernel/uconnection.hh		\
  include/urbi/kernel/uconnection.hxx		\
  include/urbi/kernel/userver.hh		\
  include/urbi/kernel/userver.hxx		\
  include/urbi/kernel/utypes.hh

dist_object_include_HEADERS =  \
	include/urbi/object/any-to-boost-function.hh \
	include/urbi/object/barrier.hh \
	include/urbi/object/centralized-slots.hh \
	include/urbi/object/centralized-slots.hxx \
	include/urbi/object/cxx-conversions.hh \
	include/urbi/object/cxx-conversions.hxx \
	include/urbi/object/cxx-object.hh \
	include/urbi/object/cxx-object.hxx \
	include/urbi/object/cxx-primitive.hh \
	include/urbi/object/date.hh include/urbi/object/date.hxx \
	include/urbi/object/dictionary.hh \
	include/urbi/object/directory.hh \
	include/urbi/object/duration.hh \
	include/urbi/object/duration.hxx \
	include/urbi/object/enumeration.hh \
	include/urbi/object/equality-comparable.hh \
	include/urbi/object/equality-comparable.hxx \
	include/urbi/object/event.hh \
	include/urbi/object/event-handler.hh \
	include/urbi/object/file.hh include/urbi/object/float.hh \
	include/urbi/object/float.hxx include/urbi/object/fwd.hh \
	include/urbi/object/global.hh include/urbi/object/hash.hh \
	include/urbi/object/job.hh include/urbi/object/list.hh \
	include/urbi/object/lobby.hh include/urbi/object/lobby.hxx \
	include/urbi/object/location.hh \
	include/urbi/object/location.hxx include/urbi/object/object.hh \
	include/urbi/object/object.hxx include/urbi/object/path.hh \
	include/urbi/object/position.hh \
	include/urbi/object/position.hxx \
	include/urbi/object/primitive.hh include/urbi/object/slot.hh \
	include/urbi/object/slot.hxx include/urbi/object/string.hh \
	include/urbi/object/symbols.hh include/urbi/object/tag.hh \
	include/urbi/object/tag.hxx \
	include/urbi/object/urbi-exception.hh \
	include/urbi/object/urbi-exception.hxx $(FROM_GEN)
nodist_parser_include_HEADERS = \
  include/urbi/parser/location.hh               \
  include/urbi/parser/position.hh

dist_runner_include_HEADERS = \
  include/urbi/runner/raise.hh

FROM_GEN = \
  include/urbi/object/any-to-boost-function.hxx	\
  include/urbi/object/cxx-primitive.hxx		\
  include/urbi/object/executable.hh

nodist_object_include_HEADERS = \
  $(precompiled_symbols_hh)


# Generate this file in builddir so that a single srcdir can produce
# several builddirs with different configuration-options that may
# result in different sets of precompiled symbols.
precompiled_symbols_hh = include/urbi/object/precompiled-symbols.hh
precompiled_symbols_stamp = $(precompiled_symbols_hh:.hh=.stamp)
# filter-out generated files, and precompiled_symbols_hh itself to
# avoid circular dependencies.
precompiled_symbols_hh_sources = \
  $(top_srcdir)/src/parser/utoken.l		\
  $(top_srcdir)/src/parser/ugrammar.y		\
  $(filter-out $(precompiled_symbols_hh)	\
               $(FROM_UGRAMMAR_Y)		\
               $(FROM_UTOKEN_L)			\
	       parser/keywords.hh		\
	       ast/ignores,			\
        $(call ls_files,			\
           src/*.hh		\
           src/*.hxx		\
           src/*.cc))

cxx_headers = \
  algorithm|deque|iomanip|iosfwd|iostream|memory|ostream|set|sstream|string|typeinfo|vector

PERL = perl
dist_lisp_DATA = share/emacs/urbiscript-mode.el
geshidir = $(brandsharedir)/geshi
dist_geshi_DATA := share/geshi/urbi.php
imagesdir = $(brandsharedir)/images
dist_images_DATA = share/images/README.txt
jpegdir = $(imagesdir)/gostai-logo/jpeg
dist_jpeg_DATA := $(call ls_files, share/images/gostai-logo/jpeg/*)
sourcesdir = $(imagesdir)/gostai-logo/sources
dist_sources_DATA := $(call ls_files, share/images/gostai-logo/sources/*)
converteddir = $(imagesdir)/gostai-logo/converted
dist_converted_DATA := $(call ls_files, share/images/gostai-logo/converted/*)
pkgconfigdir = $(datadir)/pkgconfig
nodist_pkgconfig_DATA = share/pkgconfig/urbi.pc
urbidir = $(brandsharedir)/urbi
# Beware of the case where we are a tarball: don't have two different
# path to share/urbi/ros components.
dist_urbi_DATA := \
  $(filter-out share/urbi/ros/%, 		\
    $(call ls_files,share/urbi/*.u))

nodist_urbi_DATA = \
  share/urbi/package-info.u			\
  share/urbi/platform$(LIBSFX).u


# package-info/.
urbi_package_infodir = $(urbidir)/package-info
nodist_urbi_package_info_DATA = \
  share/urbi/package-info/urbi.u		\
  share/urbi/package-info/libport.u


# ros/.
urbi_rosdir = $(urbidir)/ros
dist_urbi_ros_DATA := $(call ls_files,@{share/urbi/ros}/*)
doc_host = downloads@www.gostai.com
doc_upload_dir = gostai.com-downloads
doc_dir = $(doc_upload_dir)/urbi/$(PACKAGE_VERSION)/doc
RSYNCFLAGS = \
  --verbose --checksum --recursive --compress	\
  --exclude '*.md5' --exclude '*.map'

EXECUTABLES = src/bin/urbi$(EXEEXT) $(am__append_1)
@WIN32_TRUE@topleveldir = $(prefix)
@WIN32_TRUE@toplevel_SCRIPTS = urbi.bat
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .i .ii .i.c .ii.cc .c .cc
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/build-aux/make/init.mk $(srcdir)/build-aux/make/package-version.mk $(srcdir)/build-aux/make/build-aux.mk $(srcdir)/build-aux/make/build-farm.mk $(srcdir)/build-aux/make/bootstrap.mk $(srcdir)/debian/local.mk $(srcdir)/dev/local.mk $(srcdir)/include/local.mk $(srcdir)/share/local.mk $(srcdir)/share/emacs/local.mk $(srcdir)/share/geshi/local.mk $(srcdir)/share/images/local.mk $(srcdir)/share/pkgconfig/local.mk $(srcdir)/share/urbi/local.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

src/kernel/config.h: src/kernel/stamp-h1
	@if test ! -f $@; then \
	  rm -f src/kernel/stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) src/kernel/stamp-h1; \
	else :; fi

src/kernel/stamp-h1: $(top_srcdir)/src/kernel/config.h.in $(top_builddir)/config.status
	@rm -f src/kernel/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/kernel/config.h
$(top_srcdir)/src/kernel/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f src/kernel/stamp-h1
	touch $@

distclean-hdr:
	-rm -f src/kernel/config.h src/kernel/stamp-h1
build-aux/bin/bison++: $(top_builddir)/config.status $(top_srcdir)/build-aux/bin/bison++.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
build-aux/bin/flex++: $(top_builddir)/config.status $(top_srcdir)/build-aux/bin/flex++.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/test.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/test.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/uobjectjava.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/uobjectjava.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/uobjectjava_withmain.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/uobjectjava_withmain.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBIPing.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBIPing.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBIRecord.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBIRecord.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/Main.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/Main.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBISound.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBISound.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBISend.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBISend.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBIBandWidth.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBIBandWidth.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBIPlay.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBIPlay.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBIImage.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBIImage.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBITalkie.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBITalkie.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBIBallTrackingHead.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBIBallTrackingHead.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/swig/java/sample/URBIMirror.launch: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/swig/java/sample/URBIMirror.launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/doc/sdk-remote.dox: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/doc/sdk-remote.dox.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/doc/sdk-remote-java.dox: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/doc/sdk-remote-java.dox.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/sdk/umake: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/sdk/umake.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/sdk/umake-link: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/sdk/umake-link.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/sdk/umake-java: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/sdk/umake-java.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/sdk/urbi-launch-java: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/sdk/urbi-launch-java.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/sdk/wrapper.sh: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/sdk/wrapper.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/sdk/param.mk: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/sdk/param.mk.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/sdk/java/param.mk: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/sdk/java/param.mk.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
scripts/bf-post-install: $(top_builddir)/config.status $(top_srcdir)/scripts/bf-post-install.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
scripts/common.sh: $(top_builddir)/config.status $(top_srcdir)/scripts/common.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
scripts/install-boost: $(top_builddir)/config.status $(top_srcdir)/scripts/install-boost.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
scripts/install-java: $(top_builddir)/config.status $(top_srcdir)/scripts/install-java.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
urbi.bat: $(top_builddir)/config.status $(srcdir)/urbi.bat.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
share/pkgconfig/urbi.pc: $(top_builddir)/config.status $(top_srcdir)/share/pkgconfig/urbi.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
share/urbi/package-info.u: $(top_builddir)/config.status $(top_srcdir)/share/urbi/package-info.u.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/tests/bin/umake-java: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/tests/bin/wrapper.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/tests/bin/umake-link: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/tests/bin/wrapper.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/tests/bin/umake-shared: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/tests/bin/wrapper.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/tests/bin/umake: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/tests/bin/wrapper.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/tests/bin/urbi-launch-java: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/tests/bin/urbi-launch.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
sdk-remote/src/tests/bin/urbi-send: $(top_builddir)/config.status $(top_srcdir)/sdk-remote/src/tests/bin/urbi-send.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files
install-nodist_binSCRIPTS: $(nodist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-nodist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files
install-toplevelSCRIPTS: $(toplevel_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(topleveldir)" || $(MKDIR_P) "$(DESTDIR)$(topleveldir)"
	@list='$(toplevel_SCRIPTS)'; test -n "$(topleveldir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(topleveldir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(topleveldir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-toplevelSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(toplevel_SCRIPTS)'; test -n "$(topleveldir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(topleveldir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(topleveldir)" && rm -f $$files

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-dist_convertedDATA: $(dist_converted_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(converteddir)" || $(MKDIR_P) "$(DESTDIR)$(converteddir)"
	@list='$(dist_converted_DATA)'; test -n "$(converteddir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(converteddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(converteddir)" || exit $$?; \
	done

uninstall-dist_convertedDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_converted_DATA)'; test -n "$(converteddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(converteddir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(converteddir)" && rm -f $$files
install-dist_geshiDATA: $(dist_geshi_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(geshidir)" || $(MKDIR_P) "$(DESTDIR)$(geshidir)"
	@list='$(dist_geshi_DATA)'; test -n "$(geshidir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(geshidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(geshidir)" || exit $$?; \
	done

uninstall-dist_geshiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_geshi_DATA)'; test -n "$(geshidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(geshidir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(geshidir)" && rm -f $$files
install-dist_imagesDATA: $(dist_images_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(imagesdir)" || $(MKDIR_P) "$(DESTDIR)$(imagesdir)"
	@list='$(dist_images_DATA)'; test -n "$(imagesdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(imagesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(imagesdir)" || exit $$?; \
	done

uninstall-dist_imagesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_images_DATA)'; test -n "$(imagesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(imagesdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(imagesdir)" && rm -f $$files
install-dist_jpegDATA: $(dist_jpeg_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(jpegdir)" || $(MKDIR_P) "$(DESTDIR)$(jpegdir)"
	@list='$(dist_jpeg_DATA)'; test -n "$(jpegdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(jpegdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(jpegdir)" || exit $$?; \
	done

uninstall-dist_jpegDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_jpeg_DATA)'; test -n "$(jpegdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(jpegdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(jpegdir)" && rm -f $$files
install-dist_lispDATA: $(dist_lisp_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(lispdir)" || $(MKDIR_P) "$(DESTDIR)$(lispdir)"
	@list='$(dist_lisp_DATA)'; test -n "$(lispdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(lispdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(lispdir)" || exit $$?; \
	done

uninstall-dist_lispDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_lisp_DATA)'; test -n "$(lispdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(lispdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(lispdir)" && rm -f $$files
install-dist_sourcesDATA: $(dist_sources_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(sourcesdir)" || $(MKDIR_P) "$(DESTDIR)$(sourcesdir)"
	@list='$(dist_sources_DATA)'; test -n "$(sourcesdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sourcesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sourcesdir)" || exit $$?; \
	done

uninstall-dist_sourcesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_sources_DATA)'; test -n "$(sourcesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sourcesdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sourcesdir)" && rm -f $$files
install-dist_urbiDATA: $(dist_urbi_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(urbidir)" || $(MKDIR_P) "$(DESTDIR)$(urbidir)"
	@list='$(dist_urbi_DATA)'; test -n "$(urbidir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(urbidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(urbidir)" || exit $$?; \
	done

uninstall-dist_urbiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_urbi_DATA)'; test -n "$(urbidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(urbidir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(urbidir)" && rm -f $$files
install-dist_urbi_rosDATA: $(dist_urbi_ros_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(urbi_rosdir)" || $(MKDIR_P) "$(DESTDIR)$(urbi_rosdir)"
	@list='$(dist_urbi_ros_DATA)'; test -n "$(urbi_rosdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(urbi_rosdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(urbi_rosdir)" || exit $$?; \
	done

uninstall-dist_urbi_rosDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_urbi_ros_DATA)'; test -n "$(urbi_rosdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(urbi_rosdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(urbi_rosdir)" && rm -f $$files
install-nodist_pkgconfigDATA: $(nodist_pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(nodist_pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-nodist_pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgconfigdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgconfigdir)" && rm -f $$files
install-nodist_urbiDATA: $(nodist_urbi_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(urbidir)" || $(MKDIR_P) "$(DESTDIR)$(urbidir)"
	@list='$(nodist_urbi_DATA)'; test -n "$(urbidir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(urbidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(urbidir)" || exit $$?; \
	done

uninstall-nodist_urbiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_urbi_DATA)'; test -n "$(urbidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(urbidir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(urbidir)" && rm -f $$files
install-nodist_urbi_package_infoDATA: $(nodist_urbi_package_info_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(urbi_package_infodir)" || $(MKDIR_P) "$(DESTDIR)$(urbi_package_infodir)"
	@list='$(nodist_urbi_package_info_DATA)'; test -n "$(urbi_package_infodir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(urbi_package_infodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(urbi_package_infodir)" || exit $$?; \
	done

uninstall-nodist_urbi_package_infoDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_urbi_package_info_DATA)'; test -n "$(urbi_package_infodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(urbi_package_infodir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(urbi_package_infodir)" && rm -f $$files
install-dist_kernel_includeHEADERS: $(dist_kernel_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(kernel_includedir)" || $(MKDIR_P) "$(DESTDIR)$(kernel_includedir)"
	@list='$(dist_kernel_include_HEADERS)'; test -n "$(kernel_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(kernel_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(kernel_includedir)" || exit $$?; \
	done

uninstall-dist_kernel_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_kernel_include_HEADERS)'; test -n "$(kernel_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(kernel_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(kernel_includedir)" && rm -f $$files
install-dist_object_includeHEADERS: $(dist_object_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(object_includedir)" || $(MKDIR_P) "$(DESTDIR)$(object_includedir)"
	@list='$(dist_object_include_HEADERS)'; test -n "$(object_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(object_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(object_includedir)" || exit $$?; \
	done

uninstall-dist_object_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_object_include_HEADERS)'; test -n "$(object_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(object_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(object_includedir)" && rm -f $$files
install-dist_runner_includeHEADERS: $(dist_runner_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(runner_includedir)" || $(MKDIR_P) "$(DESTDIR)$(runner_includedir)"
	@list='$(dist_runner_include_HEADERS)'; test -n "$(runner_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(runner_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(runner_includedir)" || exit $$?; \
	done

uninstall-dist_runner_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_runner_include_HEADERS)'; test -n "$(runner_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(runner_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(runner_includedir)" && rm -f $$files
install-dist_urbi_includeHEADERS: $(dist_urbi_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(urbi_includedir)" || $(MKDIR_P) "$(DESTDIR)$(urbi_includedir)"
	@list='$(dist_urbi_include_HEADERS)'; test -n "$(urbi_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(urbi_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(urbi_includedir)" || exit $$?; \
	done

uninstall-dist_urbi_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_urbi_include_HEADERS)'; test -n "$(urbi_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(urbi_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(urbi_includedir)" && rm -f $$files
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files
install-nodist_object_includeHEADERS: $(nodist_object_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(object_includedir)" || $(MKDIR_P) "$(DESTDIR)$(object_includedir)"
	@list='$(nodist_object_include_HEADERS)'; test -n "$(object_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(object_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(object_includedir)" || exit $$?; \
	done

uninstall-nodist_object_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_object_include_HEADERS)'; test -n "$(object_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(object_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(object_includedir)" && rm -f $$files
install-nodist_parser_includeHEADERS: $(nodist_parser_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(parser_includedir)" || $(MKDIR_P) "$(DESTDIR)$(parser_includedir)"
	@list='$(nodist_parser_include_HEADERS)'; test -n "$(parser_includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(parser_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(parser_includedir)" || exit $$?; \
	done

uninstall-nodist_parser_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_parser_include_HEADERS)'; test -n "$(parser_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(parser_includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(parser_includedir)" && rm -f $$files

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(nodist_check_SCRIPTS) \
	  $(nodist_check_DATA)
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(topleveldir)" "$(DESTDIR)$(converteddir)" "$(DESTDIR)$(geshidir)" "$(DESTDIR)$(imagesdir)" "$(DESTDIR)$(jpegdir)" "$(DESTDIR)$(lispdir)" "$(DESTDIR)$(sourcesdir)" "$(DESTDIR)$(urbidir)" "$(DESTDIR)$(urbi_rosdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(urbidir)" "$(DESTDIR)$(urbi_package_infodir)" "$(DESTDIR)$(kernel_includedir)" "$(DESTDIR)$(object_includedir)" "$(DESTDIR)$(runner_includedir)" "$(DESTDIR)$(urbi_includedir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(object_includedir)" "$(DESTDIR)$(parser_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-hdr \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_convertedDATA install-dist_geshiDATA \
	install-dist_imagesDATA install-dist_jpegDATA \
	install-dist_kernel_includeHEADERS install-dist_lispDATA \
	install-dist_object_includeHEADERS \
	install-dist_runner_includeHEADERS install-dist_sourcesDATA \
	install-dist_urbiDATA install-dist_urbi_includeHEADERS \
	install-dist_urbi_rosDATA install-includeHEADERS \
	install-nodist_object_includeHEADERS \
	install-nodist_parser_includeHEADERS \
	install-nodist_pkgconfigDATA install-nodist_urbiDATA \
	install-nodist_urbi_package_infoDATA install-toplevelSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS \
	install-libLTLIBRARIES install-nodist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_convertedDATA uninstall-dist_geshiDATA \
	uninstall-dist_imagesDATA uninstall-dist_jpegDATA \
	uninstall-dist_kernel_includeHEADERS uninstall-dist_lispDATA \
	uninstall-dist_object_includeHEADERS \
	uninstall-dist_runner_includeHEADERS \
	uninstall-dist_sourcesDATA uninstall-dist_urbiDATA \
	uninstall-dist_urbi_includeHEADERS uninstall-dist_urbi_rosDATA \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-nodist_binSCRIPTS \
	uninstall-nodist_object_includeHEADERS \
	uninstall-nodist_parser_includeHEADERS \
	uninstall-nodist_pkgconfigDATA uninstall-nodist_urbiDATA \
	uninstall-nodist_urbi_package_infoDATA \
	uninstall-toplevelSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	check-am ctags-recursive install install-am install-data-am \
	install-exec-am install-strip tags-recursive uninstall-am

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES ctags ctags-recursive dist dist-all \
	dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-data-hook install-dist_binSCRIPTS \
	install-dist_convertedDATA install-dist_geshiDATA \
	install-dist_imagesDATA install-dist_jpegDATA \
	install-dist_kernel_includeHEADERS install-dist_lispDATA \
	install-dist_object_includeHEADERS \
	install-dist_runner_includeHEADERS install-dist_sourcesDATA \
	install-dist_urbiDATA install-dist_urbi_includeHEADERS \
	install-dist_urbi_rosDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nodist_binSCRIPTS install-nodist_object_includeHEADERS \
	install-nodist_parser_includeHEADERS \
	install-nodist_pkgconfigDATA install-nodist_urbiDATA \
	install-nodist_urbi_package_infoDATA install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-toplevelSCRIPTS installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_binSCRIPTS uninstall-dist_convertedDATA \
	uninstall-dist_geshiDATA uninstall-dist_imagesDATA \
	uninstall-dist_jpegDATA uninstall-dist_kernel_includeHEADERS \
	uninstall-dist_lispDATA uninstall-dist_object_includeHEADERS \
	uninstall-dist_runner_includeHEADERS \
	uninstall-dist_sourcesDATA uninstall-dist_urbiDATA \
	uninstall-dist_urbi_includeHEADERS uninstall-dist_urbi_rosDATA \
	uninstall-hook uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-nodist_binSCRIPTS \
	uninstall-nodist_object_includeHEADERS \
	uninstall-nodist_parser_includeHEADERS \
	uninstall-nodist_pkgconfigDATA uninstall-nodist_urbiDATA \
	uninstall-nodist_urbi_package_infoDATA \
	uninstall-toplevelSCRIPTS


 ifneq ($(MAKE_VERSION),3.82)
  ifeq ($(MAKELEVEL),0)
   $(warning ****************************************************)
   $(warning *** GNU Make 3.81 is known not to work properly. ***)
   $(warning *** GNU Make 3.82 is recommended.                ***)
   $(warning *** This is GNU Make $(MAKE_VERSION).                       ***)
   $(warning ****************************************************)
  endif
 endif

all: $(ALLS)
.PHONY: $(CLEAN_LOCAL)
clean-local: $(CLEAN_LOCAL)

clean-cleandirs:
	-test -z "$(CLEANDIRS)" || rm -rf $(CLEANDIRS)
VERSIONIFY_CACHE ?= $(top_srcdir)/.version
VERSIONIFY_PACKAGE ?= $(PACKAGE_TARNAME)
.PHONY: stamps
stamps: $(STAMPS)
%.stamp:
	$(AM_V_GEN) echo "$$(date): $?" >>$@
.c.i:
	$(COMPILE) -E -o $@ $<

.cc.ii:
	$(CXXCOMPILE) -E -o $@ $<
.i.i.c:
	grep -v '#' $< | tr -s '\n' '\n' >$@.tmp
	mv $@.tmp $@

.ii.ii.cc:
	grep -v '#' $< | tr -s '\n' '\n' >$@.tmp
	mv $@.tmp $@
install-data-hook: $(INSTALL_DATA_HOOKS)
install-exec-hook: $(INSTALL_EXEC_HOOKS)
uninstall-hook: $(UNINSTALL_HOOKS)

.PHONY check-TESTS: clean-semaphores
clean-semaphores:
	-$(build_aux_dir)/bin/semaphore-clean.sh

# An included Makefile that does not exist.  Regenerate the Makefile.
# Chances are that the missing file is no longer needed.  But if it is
# and cannot be regenerated, then we might loop...  FIXME: find a
# means to stop this.
%.mk:
	@if test ! -f $@; then						\
	  echo >&2 "Makefile:warning: "					\
	           "*** missing makefile, trying to proceed: $@" &&	\
	  echo "cd $(top_srcdir) && $(AUTOMAKE) --foreign" &&		\
	  ($(am__cd) $(top_srcdir) && $(AUTOMAKE) --foreign) &&		\
	  echo "cd $(top_builddir) &&  ./config.status --recheck" &&	\
	  ($(am__cd) $(top_builddir) && ./config.status --recheck)	\
	fi

all: $(VERSIONIFY_CACHE)

# Update $(VERSIONIFY_CACHE).
.PHONY: $(VERSIONIFY_CACHE)
$(VERSIONIFY_CACHE): $(VERSIONIFY)
	$(AM_V_GEN)
	$(AM_V_at)$(VERSIONIFY_RUN) --update $(VERSIONIFYFLAGS)

.PHONY: debug debug-version
debug: debug-version
debug-version:
	@echo "\$$(VERSION) = $(VERSION)"

.PHONY: help help-first

help: help-first
help-first:
	@echo "Some make targets:"

# It is often helpful to rerun configure (well, config.status).
# This is a convenient shorthand.
.PHONY: reconf reconf-help
help: reconf-help
reconf-help:
	@echo "reconf:  rerun configure"

reconf:
	cd $(top_builddir) && ./config.status --recheck
	cd $(top_builddir) && ./config.status
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS)
boost-m4-up:
	$(FETCH_BM4) 'http://github.com/tsuna/boost.m4/raw/master/build-aux/boost.m4'

# This is a modified version of Automake 1.10.2's distcheck.  The
# differences are:
#
# - we don't run "make dvi", we're not interested in it.
#
# - we don't run "make check", since the maintainers already do
#   constantly.
#
# - we don't run "make installcheck", as the build-farm already does
#   before running distcheck.
#
# - we don't run DISTCHECK installs, it's too costly yet, and our
#   semantics is slightly different.  Will be addressed eventually.
#
# - we disable the uninstallcheck because we are not ready yet.
#
# - we introduce DISTCHECK_INSTALLCHECK_FLAGS which defaults to
#   passing VERBOSE to 1.
.PHONY: distcheck-buildfarm
distcheck-buildfarm: mydistcheck

.PHONY: mydistcheck
mydistcheck: dist
	case '$(DIST_ARCHIVES)' in					 \
	*.tar.gz*)							 \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;; \
	*.tar.bz2*)							 \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;		 \
	*.tar.lzma*)							 \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;		 \
	*.tar.Z*)							 \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;		 \
	*.shar.gz*)							 \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;	 \
	*.zip*)								 \
	  unzip $(distdir).zip ;;					 \
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        mydistuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) mydistcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'

# Do not try to render colors in the output.
#
# Instrument the tests: installcheck (the only tests run by
# distcheck-buildfarm) the best moment to do that since we no longer
# run wrappers, but really the programs themselves.  But instrument
# only part of the time, Valgrind is *very* slow, and we cannot afford
# to wait for it to have run all the tests.
#
# Report the logs, as otherwise it just display a big fat silent
# failure.
DISTCHECK_INSTALLCHECK_FLAGS ?=			\
  AM_COLOR_TESTS=no				\
  INSTRUMENTATION=0.02				\
  VERBOSE=1

# Same as Automake's distuninstallcheck and mydistcleancheck, but with
# exit 0 instead of exit 1: these are useful warnings, but don't make
# them error (yet): we are not ready.
.PHONY: mydistcleancheck
mydistuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 0; } >&2

.PHONY: mydistcleancheck
mydistcleancheck:

# Remove the dists and distdirs that we made.
#
# Don't remove the current one, $(distdir).
#
# Don't use xargs when there might not be arguments, on GNU/Linux it
# runs the command anyway, without arguments, which results in useless
# noise on stderr.
.PHONY: dists-clean
dists-clean:
	for i in $(PACKAGE)-*;					\
	do							\
	  case $$i$$(test ! -d $$i || echo /) in		\
	    ($(distdir)*);;					\
	    (*.tar.* | *.zip) remove+=" $$i";;			\
	    (*/) test ! -f $$i/configure || remove+=" $$i";;	\
	  esac;							\
	done;							\
	echo "Removing former distributions...";		\
	for i in $$remove;					\
	do							\
	  echo "... $$i";					\
	  find $$i -type d ! -perm -200 -exec chmod u+w {} ';';	\
	  rm -rf $$i;						\
	done;							\
	echo "... done"

# Always clean beforehand, because since our VERSION changes
# frequently, we leave bazillions of distdirs and dists.
distcheck-buildfarm: dists-clean

$(srcdir)/bootstrap.stamp: $(BOOTSTRAP_sources)
	$(AM_V_GEN)echo '$@: $?' >$@.tmp
	$(AM_V_at)cd $(top_srcdir) && ./bootstrap
	$(AM_V_at)cat $@.tmp >>$@
	$(AM_V_at)rm -f $@.tmp

.PHONY: packages deb rpm
packages: deb rpm

deb:
	$(AM_V_GEN)$(MAKE) distdir
	$(AM_V_at)mkdir -p debian
	$(AM_V_at)for i in $(DEBIAN_GENERATED);			\
	do							\
	  sed							\
	    -e 's/[@]VERSION@/$(URBI_VERSION)/'			\
	    -e 's/[@]PACKAGE_DEBIAN@/$(PACKAGE_DEBIAN)/'	\
	    -e 's,[@]PREFIX@,$(prefix),'			\
	    $(srcdir)/$$i.in > $$i.tmp &&			\
	  mv $$i.tmp $(distdir)/$$i;				\
	done
	rm -rf $(PACKAGE_DEBIAN)
	mv $(distdir) $(PACKAGE_DEBIAN)
	tardir=$(PACKAGE_DEBIAN) && $(am__tar) | bzip2 -9 -c >$(PACKAGE_DEBIAN).tar.bz2
	cp $(PACKAGE_DEBIAN).tar.bz2 $(PACKAGE_DEBIAN).orig.tar.bz2
	cd $(PACKAGE_DEBIAN) && dpkg-buildpackage

rpm:
	fakeroot -- alien -r urbi_$(URBI_VERSION)_$(DEB_ARCH).deb
	mv urbi-$(URBI_VERSION)-2.$(DEB_ARCH).rpm urbi-$(URBI_VERSION)_$(DEB_ARCH).rpm
	fakeroot -- alien -r urbi-doc_$(URBI_VERSION)_$(DEB_ARCH).deb
	mv urbi-doc-$(URBI_VERSION)-2.$(DEB_ARCH).rpm urbi-doc-$(URBI_VERSION)_$(DEB_ARCH).rpm
	fakeroot -- alien -r urbi-dev_$(URBI_VERSION)_$(DEB_ARCH).deb
	mv urbi-dev-$(URBI_VERSION)-2.$(DEB_ARCH).rpm urbi-dev-$(URBI_VERSION)_$(DEB_ARCH).rpm

%: %.gen
	$(AM_V_GEN)mkdir -p $(@D)
	$(AM_V_at)$< > $@.tmp
	$(AM_V_at)chmod a-w $@.tmp
	$(AM_V_at)$(move_if_change_run) $@.tmp $@
	$(AM_V_at)touch $@

$(precompiled_symbols_stamp): $(precompiled_symbols_hh).gen $(precompiled_symbols_hh_sources)
	$(AM_V_GEN)mkdir -p $(@D)
	$(AM_V_at){							\
	  echo "rebuilding $(precompiled_symbols_hh) because of:";	\
	  for i in $?;							\
	  do								\
	    echo "       $$i";						\
	  done;								\
	} >$@.tmp
	$(AM_V_at)test "$(V)" != 1 || cat $@.tmp
# Don't use `mv' here so that even if we are interrupted, the file
# is still available for diff in the next run.
	$(AM_V_at)if test -f $(precompiled_symbols_hh); then	\
	  cat $(precompiled_symbols_hh);			\
	fi >$(precompiled_symbols_hh)~
	$(AM_V_at)$(srcdir)/$(precompiled_symbols_hh).gen		\
		$(filter-out %$(precompiled_symbols_hh).gen, $^)	\
		>$(precompiled_symbols_hh).tmp
	$(AM_V_at)$(move_if_change_run)			\
	  $(precompiled_symbols_hh).tmp $(precompiled_symbols_hh)
	$(AM_V_at)mv -f $@.tmp $@

$(precompiled_symbols_hh): $(precompiled_symbols_stamp)
	@if test ! -f $@; then					\
	  rm -f $(precompiled_symbols_stamp);			\
	  $(MAKE) $(AM_MAKEFLAGS) $(precompiled_symbols_stamp);	\
	fi

.PHONY maintainer-check: maintainer-check-includes
maintainer-check-includes: $(HEADERS)
	$(AM_V_GEN)! $(PERL) -n						  \
	  -e '/#\s*include\s*<(.*?)>/ and $$include{$$1} = 1;'		  \
	  -e 'END { print join ("\n", (sort (keys %include), "")) }' $^ | \
	  grep -Ev '^((boost|libport|sched|urbi)/|($(cxx_headers)))'

# For some reasons, Automake does not issue a build rule for this one.
share/urbi/platform$(LIBSFX).u: $(top_builddir)/config.status $(top_srcdir)/share/urbi/platform.u.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

urbi.stamp: $(dist_urbi_DATA) $(nodist_urbi_DATA)

share/urbi/package-info/urbi.u: $(top_srcdir)/.version $(VERSIONIFY)
	$(AM_V_GEN)$(VERSIONIFY_RUN) --urbiscript=$@ --prefix='Urbi'
	$(AM_V_at)touch $@
share/urbi/package-info/libport.u: $(top_srcdir)/sdk-remote/libport/.version $(VERSIONIFY)
	$(AM_V_GEN)$(VERSIONIFY_RUN) --urbiscript=$@ --prefix='Libport'
	$(AM_V_at)touch $@
install-doc/%:
	$(MAKE) $(AM_MAKEFLAGS)			\
	  doc_host='$(doc_host)'		\
	  doc_dir='$(doc_dir).new'		\
	  -C $* install-doc
install-doc:
	ssh $(doc_host)					\
	 'rm -rf $(doc_dir).new $(doc_dir).old &&	\
	  if test -d $(doc_dir); then			\
	    cp -r $(doc_dir) $(doc_dir).new;		\
	  else						\
	    mkdir -p $(doc_dir).new;			\
	  fi'
	$(MAKE) $(AM_MAKEFLAGS) RSYNCFLAGS='$(RSYNCFLAGS)'	\
	  install-doc/doc install-doc/sdk-remote
	ssh $(doc_host)							\
	  '{ test ! -e $(doc_dir) || mv $(doc_dir) $(doc_dir).old; } &&	\
	   mv $(doc_dir).new $(doc_dir) &&				\
	   rm -rf $(doc_dir).old'
	scp $(build_aux_dir)/bin/symlink-to-latest $(doc_host):/tmp
	ssh $(doc_host) 'perl -f /tmp/symlink-to-latest $(dir $(doc_dir))'
	scp $(top_srcdir)/scripts/www/HEADER.html $(doc_host):$(dir $(doc_dir))

# Run just the doc test suite, without building again the PDF.
check-addons check-doc:
	$(MAKE) $(AM_MAKEFLAGS) -C doc $@

# Check the kernel: doc and tests.
check-kernel:
	$(MAKE) $(AM_MAKEFLAGS) check-doc
	$(MAKE) $(AM_MAKEFLAGS) -C tests check

# check-html, check-clean, check-uob etc.
# Last in order to avoid hiding the previous rules.
check-%:
	$(MAKE) $(AM_MAKEFLAGS) -C sdk-remote/src/tests $@
	$(MAKE) $(AM_MAKEFLAGS) -C tests $@
	$(MAKE) $(AM_MAKEFLAGS) -C doc $@
recheck recheck-html:
	$(MAKE) $(AM_MAKEFLAGS) -C sdk-remote/src/tests $@
	$(MAKE) $(AM_MAKEFLAGS) -C tests $@
	$(MAKE) $(AM_MAKEFLAGS) -C doc $@

.PHONY: spell-check
spell-check:
	$(MAKE) $(AM_MAKEFLAGS) -C doc $@
libraries.stamp: src/libuobject$(LIBSFX).la sdk-remote/src/libuobject/libuobject$(LIBSFX).la sdk-remote/src/liburbi/liburbi$(LIBSFX).la
executables.stamp: $(EXECUTABLES)
all.stamp: urbi.stamp libraries.stamp executables.stamp

.PHONY: relocatable
relocatable: scripts/bf-post-install
	$<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
