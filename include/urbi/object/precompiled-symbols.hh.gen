#! /usr/bin/perl -w

use strict;

my %char =
  (
   'AMPERSAND' => '&',
   'BANG'      => '!',
   'CARET'     => '^',
   'COLON'     => ':',
   'DOLLAR'    => '$',
   'EQ'        => '=',
   'GT'        => '>',
   'LPAREN'    => '(',
   'LT'        => '<',
   'MINUS'     => '-',
   'PERCENT'   => '%',
   'PIPE'      => '|',
   'PLUS'      => '+',
   'RPAREN'    => ')',
   'SBL'       => '[',
   'SBR'       => ']',
   'SLASH'     => '/',
   'SP'        => ' ',
   'STAR'      => '*',
   'TILDA'     => '~',
   'UL'        => '_',
  );

# Convert a symbol name into its representation.
sub symbol ($)
{
  my ($res) = @_;
  while (my ($code, $char) = each %char)
  {
    $res =~ s/_?${code}_?/$char/g;
  }
  $res;
}

# Check that no symbol::Symbol are called directly with literals.
my $literals = `grep -E -n 'libport::Symbol *\\("[^"]*"\\)' @ARGV`;
die "use SYMBOL instead of direct calls to libport::Symbol:\n$literals\n"
  if $literals;

# Get the list of all the SYMBOL() uses.
#
# SYMBOL(EQ) is used when we want to denote it explicitly.
#
# CAPTURE_GLOBAL(EQ) is used when we want to cache a global
# symbol from C++ the first time we look it up.
#
# DECLARE(EQ, ...) is used in object/*.cc to bind C++ functions
# into the Urbi world.  Similarly with BOUNCE.
#
# RETURN_OP(EQ) is used in the scanner to return tokens whose
# semantical value is the string itself.
my $symbol_tag = 'BOUNCE|CAPTURE_GLOBAL|DECLARE|SYMBOL|RETURN_OP';

# The lines that declare a symbol.
#
# Skip the definition of macros.  Don't anchor at beginning of line,
# since we have the file:line: prefix.
my $symbols = `grep -E '($symbol_tag) *\\(' @ARGV |
                 grep -Ev '# *define  *($symbol_tag)'`;

# print STDERR "$symbols\n";

die "grep failed"
    unless $symbols;

# The set of symbols used.
# Accept only identifiers followed by ')', or ','.
my %symbol =
  map { $_ => symbol($_) }
      ($symbols =~ /\b(?:$symbol_tag) *\((\w+)\s*[,)]/gm);

print <<'EOF';
/**
 ** \file urbi/object/precompiled-symbols.hh
 ** \brief Predefined symbols.
 */

#ifndef URBI_OBJECT_PRECOMPILED_SYMBOLS_HH
# define URBI_OBJECT_PRECOMPILED_SYMBOLS_HH

# define SYMBOLS_APPLY(Macro)			  \
EOF

printf "  %-48s\\\n", "Macro($_, \"$symbol{$_}\");"
  foreach sort keys %symbol;

print <<'EOF';
  /* Backslash terminator. */

#endif // !URBI_OBJECT_PRECOMPILED_SYMBOLS_HH
EOF



### Setup "Gostai" style for perl-mode and cperl-mode.
## Local Variables:
## perl-indent-level: 2
## perl-continued-statement-offset: 2
## perl-continued-brace-offset: -2
## perl-brace-offset: 0
## perl-brace-imaginary-offset: 0
## perl-label-offset: -2
## cperl-indent-level: 2
## cperl-brace-offset: 0
## cperl-continued-brace-offset: -2
## cperl-label-offset: -2
## cperl-extra-newline-before-brace: t
## cperl-merge-trailing-else: nil
## cperl-continued-statement-offset: 2
## End:
