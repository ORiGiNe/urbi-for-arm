#! /bin/sh

set -ex
. $(dirname $0)/common.sh
set -x

gostai_console_version=2.6-rc-0


install_gostai_console ()
{
  local sharedir=$HOME/share
  local readme=$sharedir/README-share.txt
  if test ! -f $readme; then
    stderr "Gostai Console is not available: there is no $readme"
    return
  fi

  local toolsdir=$sharedir/tools
  local consoledir=$toolsdir/gostai-console/$gostai_console_version/$CONFIGURATION
  if test ! -d $consoledir; then
    stderr "Gostai Console is not available: cannot read directory $consoledir"
    return
  fi

  local i
  for i in $consoledir/*
  do
    local dir=$(basename "$i")
    case $dir in
      (bin)
        cp -a $i/* $DESTDIR$bindir
        # Edit the qt.conf file so that it looks for libs in the right place.
        perl -pi -e 's{\.\./share/GostaiConsole/.*/lib}{../lib}' \
          $DESTDIR$bindir/qt.conf
        ;;

      (share)
        # Copy everything but the "lib" directory into $datadir.
        # Which is easier to do by actually copying all the share/
        # directory, and moving lib/'s content in a second step.
        cp -a $i/* $DESTDIR$datadir

        # Move new libraries to the right place, remove the duplicates.
        local lib
        for lib in $DESTDIR$datadir/GostaiConsole/*/lib/*
        do
          local libname=$(basename $lib)
          # Failed globbing, if for instance the dir is not there.
          test "$libname" != '*' ||
            fatal "cannot read in $lib"
          if test -f $DESTDIR$libdir/$libname; then
            stderr "no need for Gostai Console's $libname, removed"
            rm $lib
          else
            stderr "installing Gostai Console's $libname"
            mv $lib $DESTDIR$libdir
          fi
        done
        rmdir $DESTDIR$datadir/GostaiConsole/*/lib
        ;;

      (*)
        fatal "unexpected content in Gostai Console besides bin and share: $dir"
        ;;
    esac
  done
}

## -------------- ##
## Post-install.  ##
## -------------- ##

# --------------------------- #
# Completion/relocatability.  #
# --------------------------- #

# Boost.
#
$builddir/scripts/install-boost

# JVM.
#
$builddir/scripts/install-java

# Gostai Console.
#
install_gostai_console

# Shared lib dependencies.
#
# Complete the package with missing libraries, strip if wanted, make
# it relocatable, and check there are no missing dependencies.
strip_opt=
$COMPILATION_MODE_DEBUG || strip_opt=--strip
$srcdir/build-aux/bin/check-lib-deps            \
  --verbose --verbose                           \
  --destdir="$DESTDIR"                          \
  --host-os="$URBI_HOST_OS"                     \
  --libdir="$libdir"                            \
  --libpath="$BOOST_LDPATH"                     \
  $strip_opt --strip-command="$STRIP"           \
  "$DESTDIR"

# Header completion.  Might have become useless because of install-boost.
$srcdir/build-aux/bin/check-include-deps        \
  --verbose --verbose                           \
  --check                                       \
  --include-dir="$DESTDIR$prefix/include"       \
  $builddir



# ------- #
# Fixes.  #
# ------- #

# 1. Fix libtool usage of +=.
# 2. Remove -nostdlib and explicit stdlib from libtool.
#
# The resulting libtool may not work, but it is not working without
# patch anyway...
find "$DESTDIR$prefix" -name libtool |
  xargs perl -pi                                                        \
       -e 's/^\s*eval "\$1\+=\\\$2"$/eval "\$1=\\\$\$1\\" \$2\\""/;'    \
       -e 's/^predep_objects=.*/#- $&/;'                                \
       -e 's/postdep_objects=.*/#- $&/;'                                \
       -e 's/-nostdlib//g;'                                             \
       -e 's/^SED=.*/SED=sed/;'

# Remove ccache and -Werror from the param.mk and libtool.
# Remove also hidden visibility as it prevents linking uobjects using
# boost symbols inside libport.
find "$DESTDIR$prefix" '(' -name param.mk -or -name libtool ')' |
  xargs perl -pi                                \
        -e 's/ccache //;'                       \
        -e 's/g(cc|\+\+)(?:-[\d.]+)/g$1/;'      \
        -e 's/-Werror//;'                       \
        -e 's/-fvisibility=hidden//;'           \
        -e 's/-fvisibility-inlines-hidden//;'

# Restore +x on libtool.
find "$DESTDIR$prefix" -name libtool -exec chmod u+x '{}' ';'

# Set more permissive access rights.
chmod -R a+rX "$DESTDIR$prefix"


# ---------- #
# Removals.  #
# ---------- #

# We have some problems with the *.la files.  For instance, although
# we use Boost as static libraries, they appear as runtime
# dependencies.  We could try to fix the *.la files, but it appears to
# work well without them.
find "$DESTDIR$prefix" -name '*.la' -delete

# Get rid of empty directories, recursively.  Of course it is better
# not to create these directories, but Automake is not helping us
# here.
find "$DESTDIR$prefix" -empty -a -type d -delete
